<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0075)http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/ -->
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-US" class="cufon-active cufon-ready"><head profile="http://gmpg.org/xfn/11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta http-equiv="X-UA-Compatible" content="IE=7">
<title>  stm32plus: ADS7843 touch screen driver | Andy's Workshop</title>

<link rel="stylesheet" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/style.css" type="text/css" media="screen">
<link rel="stylesheet" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/jquery.fancybox-1.2.6.css" type="text/css" media="screen">
<!--[if lt IE 7]>
	<link rel="stylesheet" type="text/css" href="http://andybrown.me.uk/ws/wp-content/themes/LightBright/css/ie6style.css" />
	<script type="text/javascript" src="http://andybrown.me.uk/ws/wp-content/themes/LightBright/js/DD_belatedPNG_0.0.8a-min.js"></script>
	<script type="text/javascript">DD_belatedPNG.fix('img#logo, a.bubble, .overlay, span.comment-count, #sidebar .search, .entry .post, .entry-top, .share .share_button, .share a.arrow, .share .buttons, .share .buttons a span.tooltip span.left-arrow, .share img, .entry-bottom, .comment-icon .bubble, .comment-icon, .widget-content, div.avatar span.avatar-overlay');</script>
<![endif]-->
<!--[if IE 7]>
	<link rel="stylesheet" type="text/css" href="http://andybrown.me.uk/ws/wp-content/themes/LightBright/css/ie7style.css" />
<![endif]-->

<link rel="alternate" type="application/rss+xml" title="Andy&#39;s Workshop RSS Feed" href="http://andybrown.me.uk/ws/feed/">
<link rel="alternate" type="application/atom+xml" title="Andy&#39;s Workshop Atom Feed" href="http://andybrown.me.uk/ws/feed/atom/">
<link rel="pingback" href="http://andybrown.me.uk/ws/xmlrpc.php">

				
	<script type="text/javascript" async="" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/ga.js"></script><script type="text/javascript">//<![CDATA[
	// Google Analytics for WordPress by Yoast v4.2.3 | http://yoast.com/wordpress/google-analytics/
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount','UA-19294066-1']);
	_gaq.push(['_trackPageview']);
	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
	//]]></script>
<link rel="alternate" type="application/rss+xml" title="Andy&#39;s Workshop Â» stm32plus: ADS7843 touch screen driver Comments Feed" href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/feed/">
		<link rel="stylesheet" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/style-Black.css" type="text/css" media="screen">
	<meta content="LightBright v.1.6" name="generator"><link rel="stylesheet" id="collapseomatic-css-css" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/style(1).css" type="text/css" media="all">
<link rel="stylesheet" id="wp_dlmp_styles-css" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/styles.css" type="text/css" media="all">
<link rel="stylesheet" id="shortcodesStyleSheets-css" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/shortcodes.css" type="text/css" media="all">
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/jquery.js"></script>
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/collapse.js"></script>
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/comment-reply.js"></script>
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/swfobject.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://andybrown.me.uk/ws/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://andybrown.me.uk/ws/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="stm32plus: ILI9325 TFT driver" href="http://andybrown.me.uk/ws/2012/01/01/stm32plus-ili9325-tft-driver/">
<link rel="next" title="stm32plus: A full photoframe application" href="http://andybrown.me.uk/ws/2012/02/19/photoframe/">
<meta name="generator" content="WordPress 3.3.1">
<link rel="canonical" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/stm32plus  ADS7843 touch screen driver   Andy's Workshop.htm">
<link rel="shortlink" href="http://andybrown.me.uk/ws/?p=1312">

<!-- Start Of Script Generated By cforms v11.6.1 [Oliver Seidel | www.deliciousdays.com] -->
<link rel="stylesheet" type="text/css" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/minimal.css">
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/cforms.js"></script>
<!-- End Of Script Generated By cforms -->

	<style type="text/css">
	.download-info .download-button {
		background-image: url(http://andybrown.me.uk/ws/wp-content/plugins/download-monitor/page-addon/downloadbutton.gif);
	}
	.download-info .more-button {
		background-image: url(http://andybrown.me.uk/ws/wp-content/plugins/download-monitor/page-addon/morebutton.gif);
	}
	</style>

<meta name="GRAND FlAGallery" content="1.65">
<link rel="stylesheet" type="text/css" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/shCore.css"><link rel="stylesheet" type="text/css" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/shThemeDefault.css"><meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.3">

<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/audio-player.js"></script>  
<script src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/cufon-yui.js" type="text/javascript"></script><style type="text/css">cufon{text-indent:0!important;}@media screen,projection{cufon{display:inline!important;display:inline-block!important;position:relative!important;vertical-align:middle!important;font-size:1px!important;line-height:1px!important;}cufon cufontext{display:-moz-inline-box!important;display:inline-block!important;width:0!important;height:0!important;overflow:hidden!important;text-indent:-10000in!important;}cufon canvas{position:relative!important;}}@media print{cufon{padding:0!important;}cufon canvas{display:none!important;}}</style>
<script src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/League_Gothic_400.font.js" type="text/javascript"></script>
<script type="text/javascript">
			Cufon.replace('ul.nav li a',{textShadow: '-1px -1px 1px #031112', hover: { textShadow: '-1px -1px 1px #031112'}})('h1')('h2')('h3')('h4')('h5')('h6')('span.date')('span.comment-count')('.widget h3.title', {textShadow: '-1px -1px 1px #032328'})('span.fn')('span.fn a')('.wp-pagenavi span', {textShadow: '-1px -1px 1px rgba(0,0,0,0.5)'})('.wp-pagenavi a.page',{textShadow: '-1px -1px 1px rgba(0,0,0,0.5)'}); 
		AudioPlayer.setup("http://andybrown.me.uk/ws/wp-content/themes/LightBright/js/player.swf", { width: 380 });  
</script><style type="text/css" media="screen">p.audioplayer_container span {visibility:hidden;height:24px;overflow:hidden;padding:0;border:none;}</style>

<script type="text/javascript" id="idc-comment-wrap-js" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/wordpressTemplateCommentWrapper2.php"></script><script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/wordpressTemplateLinkWrapper2.php"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/document_iterator.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/find_proxy.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/get_html_text.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/global_constants.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/name_injection_builder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/number_injection_builder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/string_finder.js"></script><script src="chrome-extension://lifbcibllhkdhoafpjfnlhfpfgnpldfl/change_sink.js"></script><link rel="stylesheet" href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/idcCSS.php" type="text/css"><meta name="document_iterator.js"><meta name="find_proxy.js"><meta name="get_html_text.js"><meta name="global_constants.js"><meta name="name_injection_builder.js"><meta name="number_injection_builder.js"><meta name="string_finder.js"><meta name="change_sink.js"><script src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/comment-func.php" type="text/javascript"></script><script src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/remote-login.php" type="text/javascript"></script><script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/quant.js"></script></head>
<body>
	<div id="container">
		<div id="header" class="clearfix">
			<a href="http://andybrown.me.uk/ws">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/logo.png" alt="logo" id="logo">
			</a>
			<p id="slogan"></p>
			
			<ul id="menu-menu" class="nav superfish clearfix sf-js-enabled" style="padding-left: 72px; "><li id="menu-item-67" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-67"><a href="http://andybrown.me.uk/ws/contact/" class="sf-with-ul"><cufon class="cufon cufon-canvas" alt="Contact" style="width: 40px; height: 18px; "><canvas width="52" height="23" style="width: 52px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>Contact</cufontext></cufon><span class="sf-sub-indicator"><cufon class="cufon cufon-canvas" alt=" " style="width: 3px; height: 18px; "><canvas width="17" height="23" style="width: 17px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext> </cufontext></cufon></span></a>
<ul class="sub-menu" style="margin-left: 0px; display: none; visibility: hidden; "><span class="top-arrow"></span>
	<li id="menu-item-68" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-68"><a href="http://andybrown.me.uk/ws/about/"><cufon class="cufon cufon-canvas" alt="About" style="width: 30px; height: 18px; "><canvas width="42" height="23" style="width: 42px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>About</cufontext></cufon></a></li>
	<li id="menu-item-73" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-73"><a href="http://andybrown.me.uk/ws/terms-and-conditions/"><cufon class="cufon cufon-canvas" alt="Terms " style="width: 34px; height: 18px; "><canvas width="47" height="23" style="width: 47px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>Terms </cufontext></cufon><cufon class="cufon cufon-canvas" alt="and " style="width: 22px; height: 18px; "><canvas width="35" height="23" style="width: 35px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>and </cufontext></cufon><cufon class="cufon cufon-canvas" alt="conditions" style="width: 54px; height: 18px; "><canvas width="64" height="23" style="width: 64px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>conditions</cufontext></cufon></a></li>
</ul>
</li>
<li id="menu-item-993" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-993"><a href="http://andybrown.me.uk/ws/category/stm32-2/" class="sf-with-ul"><cufon class="cufon cufon-canvas" alt="STM32" style="width: 35px; height: 18px; "><canvas width="44" height="23" style="width: 44px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>STM32</cufontext></cufon><span class="sf-sub-indicator"><cufon class="cufon cufon-canvas" alt=" " style="width: 3px; height: 18px; "><canvas width="17" height="23" style="width: 17px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext> </cufontext></cufon></span></a>
<ul class="sub-menu" style="margin-left: 0px; display: none; visibility: hidden; "><span class="top-arrow"></span>
	<li id="menu-item-1283" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1283"><a href="http://andybrown.me.uk/ws/stm32plus-index-of-posts/"><cufon class="cufon cufon-canvas" alt="stm32plus " style="width: 57px; height: 18px; "><canvas width="70" height="23" style="width: 70px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>stm32plus </cufontext></cufon><cufon class="cufon cufon-canvas" alt="â " style="width: 11px; height: 18px; "><canvas width="24" height="23" style="width: 24px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>â </cufontext></cufon><cufon class="cufon cufon-canvas" alt="index " style="width: 31px; height: 18px; "><canvas width="44" height="23" style="width: 44px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>index </cufontext></cufon><cufon class="cufon cufon-canvas" alt="of " style="width: 13px; height: 18px; "><canvas width="27" height="23" style="width: 27px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>of </cufontext></cufon><cufon class="cufon cufon-canvas" alt="posts" style="width: 28px; height: 18px; "><canvas width="39" height="23" style="width: 39px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>posts</cufontext></cufon></a></li>
</ul>
</li>
<li id="menu-item-69" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-69"><a href="http://andybrown.me.uk/ws/category/avrprogenv/"><cufon class="cufon cufon-canvas" alt="AVR" style="width: 21px; height: 18px; "><canvas width="30" height="23" style="width: 30px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>AVR</cufontext></cufon></a></li>
<li id="menu-item-998" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-998"><a href="http://andybrown.me.uk/ws/category/avrprogenv/arduino-specific/"><cufon class="cufon cufon-canvas" alt="Arduino" style="width: 40px; height: 18px; "><canvas width="50" height="23" style="width: 50px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>Arduino</cufontext></cufon></a></li>
<li id="menu-item-508" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-508"><a href="http://andybrown.me.uk/ws/category/hardware-projects/"><cufon class="cufon cufon-canvas" alt="Hardware " style="width: 52px; height: 18px; "><canvas width="65" height="23" style="width: 65px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>Hardware </cufontext></cufon><cufon class="cufon cufon-canvas" alt="projects" style="width: 42px; height: 18px; "><canvas width="53" height="23" style="width: 53px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>projects</cufontext></cufon></a></li>
<li id="menu-item-78" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-78"><a href="http://andybrown.me.uk/ws/downloads/"><cufon class="cufon cufon-canvas" alt="Downloads" style="width: 55px; height: 18px; "><canvas width="66" height="23" style="width: 66px; height: 23px; top: -4px; left: -2px; "></canvas><cufontext>Downloads</cufontext></cufon></a></li>
</ul>		</div> <!-- end #header -->
		
		<div id="content-area" class="clearfix">
		
			<div id="main-area">				
		
		
<div class="entry text">
	<div class="entry-top"></div>
	
	<div class="share">
	<span class="share_button">share</span>
	
	<div class="share-box">
		<div class="buttons">
																	
			<a href="http://twitter.com/home?status=stm32plus:%20ADS7843%20touch%20screen%20driver%20http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon1.png" alt="">
				<span class="tooltip">
					tweet this post					<span class="left-arrow"></span>
				</span>
			</a>
			<a href="http://del.icio.us/post?url=http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/&title=stm32plus:%20ADS7843%20touch%20screen%20driver">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon2.png" alt="">
				<span class="tooltip">
					share on delicious					<span class="left-arrow"></span>
				</span>
			</a>
			<a href="http://www.digg.com/submit?phase=2&url=http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/&title=stm32plus:%20ADS7843%20touch%20screen%20driver">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon3.png" alt="">
				<span class="tooltip">
					dig this post					<span class="left-arrow"></span>
				</span>
			</a>
			<a href="http://www.stumbleupon.com/submit?url=http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/&title=stm32plus:%20ADS7843%20touch%20screen%20driver">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon4.png" alt="">
				<span class="tooltip">
					share on stumbleupon					<span class="left-arrow"></span>
				</span>
			</a>
			<a href="http://www.squidoo.com/lensmaster/bookmark?http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon5.png" alt="">
				<span class="tooltip">
					share on squidoo					<span class="left-arrow"></span>
				</span>
			</a>
			<a href="http://in.buzz.yahoo.com/buzz?targetUrl=http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon6.png" alt="">
				<span class="tooltip">
					share on yahoo buzz					<span class="left-arrow"></span>
				</span>
			</a>
			<a href="http://www.blinklist.com/index.php?Action=Blink/addblink.php&Url=http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/&Title=stm32plus:%20ADS7843%20touch%20screen%20driver">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon7.png" alt="">
				<span class="tooltip">
					share on blinklist					<span class="left-arrow"></span>
				</span>
			</a>
			<a href="http://www.mixx.com/submit?page_url=http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/&title=stm32plus:%20ADS7843%20touch%20screen%20driver">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon8.png" alt="">
				<span class="tooltip">
					share on mixx					<span class="left-arrow"></span>
				</span>
			</a>
			<a href="http://www.furl.net/storeIt.jsp?t=stm32plus:%20ADS7843%20touch%20screen%20driver&u=http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/">
				<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/share-icon9.png" alt="">
				<span class="tooltip">
					share on furl					<span class="left-arrow"></span>
				</span>
			</a>
		</div> <!-- end .buttons -->
		
		<a href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/#" class="arrow"></a>
	</div> <!-- end .share-box -->
</div> <!-- end .share -->	
	<div class="post clearfix">
		<div class="content clearfix">
			
						
						
			<a href="http://andybrown.me.uk/ws?post_type=post" class="bubble">stm32plus: ADS7843 touch screen driver</a>
			
			<h1 class="title"><cufon class="cufon cufon-canvas" alt="stm32plus: " style="width: 131px; height: 40px; "><canvas width="159" height="48" style="width: 159px; height: 48px; top: -8px; left: -1px; "></canvas><cufontext>stm32plus: </cufontext></cufon><cufon class="cufon cufon-canvas" alt="ADS7843 " style="width: 104px; height: 40px; "><canvas width="131" height="48" style="width: 131px; height: 48px; top: -8px; left: -1px; "></canvas><cufontext>ADS7843 </cufontext></cufon><cufon class="cufon cufon-canvas" alt="touch " style="width: 70px; height: 40px; "><canvas width="97" height="48" style="width: 97px; height: 48px; top: -8px; left: -1px; "></canvas><cufontext>touch </cufontext></cufon><cufon class="cufon cufon-canvas" alt="screen " style="width: 81px; height: 40px; "><canvas width="109" height="48" style="width: 109px; height: 48px; top: -8px; left: -1px; "></canvas><cufontext>screen </cufontext></cufon><cufon class="cufon cufon-canvas" alt="driver" style="width: 66px; height: 40px; "><canvas width="90" height="48" style="width: 90px; height: 48px; top: -8px; left: -1px; "></canvas><cufontext>driver</cufontext></cufon></h1>
			<span class="date"><cufon class="cufon cufon-canvas" alt="Jan " style="width: 41px; height: 36px; "><canvas width="66" height="43" style="width: 66px; height: 43px; top: -7px; left: -1px; "></canvas><cufontext>Jan </cufontext></cufon><cufon class="cufon cufon-canvas" alt="07" style="width: 24px; height: 36px; "><canvas width="44" height="43" style="width: 44px; height: 43px; top: -7px; left: -1px; "></canvas><cufontext>07</cufontext></cufon></span>
			
			<div class="clear"></div>
			
						
			
													
			
						
						
						
			
				<p>
My last few blog articles have presented stm32plus drivers for the HX8347A and ILI9325 controllers. Given that both of these panels came with touch screens I think itâs about time that we took a brief interlude from the TFT drivers and presented a flexible touch screen driver for ADS7843-compatible controllers. This driver will feature pluggable noise-reduction and screen calibration implementation and I supply an advanced 3-point calibration algorithm and a variable strength pixel averaging noise reduction algorithm with the package.
</p>
<h2><cufon class="cufon cufon-canvas" alt="The " style="width: 28px; height: 24px; "><canvas width="45" height="29" style="width: 45px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>The </cufontext></cufon><cufon class="cufon cufon-canvas" alt="ADS7843" style="width: 59px; height: 24px; "><canvas width="71" height="29" style="width: 71px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>ADS7843</cufontext></cufon></h2>
<p>
The ADS7843 by Texas Instruments is the de-facto standard for cheap resistive touch screens. There are many compatible devices from other manufacturers available, such as the UH7843 by Zilltek and the XPT2046 by XPTEK. Both of these are 100% compatible with the ADS7843.
</p>
<p>
The ADS7843 is an analogue-to-digital converter and you can read up on the theory of operation in the datasheet. What we need to know is how we can talk to it.
</p>
<p>
The two basic parts to the ADS7843 digital interface are an SPI-compatible bus for transferring data and a single digital line (/PENIRQ) that the device pulls low when the the user touches the screen.
</p>
<p>
<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/digitalInterface.png" border="0"><br>
<em>The SPI interface plus the PENIRQ line</em>
</p>
<p>
The SPI protocol supported by the ADS7843 is straightforward. Basically you send it an 8-bit command that tells it whether you want to read X or Y, the resolution (8 or 12 bit), whether power-saving mode is to be enabled and a few other flags that affect the conversion.
</p>
<p>
<a href="http://andybrown.me.uk/ws/wp-content/images//stm32plus/ads7843/protocol_large.png" target="_blank&quot;"><br>
  <img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/protocol_small.png" border="0"><br>
</a><br>
<em>The SPI protocol. Click for larger.</em>
</p>
<p>
Note that in the timing diagram there is the presence of a BUSY line. Although this is provided we never use it because it is completely predictable in that it will be high for exactly one clock during the output cycle and itâs always the first clock. We compensate for this in software by throwing away the first bit received over the SPI bus.
</p>
<p>
<a href="http://andybrown.me.uk/ws/wp-content/images//stm32plus/ads7843/logic_large.png" target="_blank"><br>
<img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/logic_small.jpg" border="0"><br>
</a><br>
<em>Click image for larger.</em>
</p>
<p>
The screen grab above from my logic analyser shows the theory put into practice with a real life SPI conversation.</p>
<h2><cufon class="cufon cufon-canvas" alt="Interference " style="width: 88px; height: 24px; "><canvas width="104" height="29" style="width: 104px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>Interference </cufontext></cufon><cufon class="cufon cufon-canvas" alt="and " style="width: 29px; height: 24px; "><canvas width="45" height="29" style="width: 45px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>and </cufontext></cufon><cufon class="cufon cufon-canvas" alt="other " style="width: 40px; height: 24px; "><canvas width="57" height="29" style="width: 57px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>other </cufontext></cufon><cufon class="cufon cufon-canvas" alt="issues" style="width: 43px; height: 24px; "><canvas width="56" height="29" style="width: 56px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>issues</cufontext></cufon></h2>
<p>
To be honest when I got started on this I took one look at the digital interface and thought: âNo problem, Iâll be done in a few hoursâ. I look back and laugh at that now! The basic problem is that the data read from the AD converter is very noisy and we have to go to great lengths to smooth it out in order to get an accurate reading. Hereâs a summary of the issues I found and how I got around them.
</p>
<ul>
<li>
<p><em>The first sample read from the panel after an interrupt is the worst quality.</em></p>
<p>
This is because the screen has not settled yet. I throw away the first sample and keep the device in power-up mode while looping for subsequent samples.
</p>
</li>
<li>
<p><em>The rest of the samples have much variance.</em></p>
<p>
Keeping the device on, I oversample 7 times and choose the median using an optimised median algorithm.
</p>
</li>
<li>
<p><em>Repeated samples still deviate slightly from each other.</em></p>
<p>
I implemented a pluggable sample post-processor architecture. Adding an averaging post-processor reduces response times slightly but yields consecutive screen samples that differ by only fractions of a percent.
</p>
</li>
<li>
<p><em>High-speed SPI means noisy samples.</em></p>
<p>
I found that I get an optimal noise/speed tradeoff around 1 or 2Mhz for the SPI bus. What works for you may vary and stm32plus leaves this frequency up to you.
</p>
</li>
</ul>
<p>
There is a great application bulletin PDF published originally by Burr Brown and subsequently by TI called âTouch Screen Controller Tipsâ. Most of the noise issues that I came up against are worked through in this paper. Itâs a great read and comes highly recommended.
</p>
<h2><cufon class="cufon cufon-canvas" alt="stm32plus " style="width: 75px; height: 24px; "><canvas width="92" height="29" style="width: 92px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>stm32plus </cufontext></cufon><cufon class="cufon cufon-canvas" alt="implementation" style="width: 106px; height: 24px; "><canvas width="118" height="29" style="width: 118px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>implementation</cufontext></cufon></h2>
<p>The following diagram shows the basic program flow that happens when we interact with the touch screen.</p>
<p>
<img border="0" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/programFlow.png" <="" img=""><br>
<em>Basic high-level program flow</em></p>
<h3><cufon class="cufon cufon-canvas" alt="Watch " style="width: 41px; height: 22px; "><canvas width="57" height="26" style="width: 57px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>Watch </cufontext></cufon><cufon class="cufon cufon-canvas" alt="the " style="width: 24px; height: 22px; "><canvas width="39" height="26" style="width: 39px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>the </cufontext></cufon><cufon class="cufon cufon-canvas" alt="demo " style="width: 36px; height: 22px; "><canvas width="51" height="26" style="width: 51px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>demo </cufontext></cufon><cufon class="cufon cufon-canvas" alt="video" style="width: 32px; height: 22px; "><canvas width="44" height="26" style="width: 44px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>video</cufontext></cufon></h3>
<p>
<object style="height: 390px; width: 500px"><param name="movie" value="http://www.youtube.com/v/0Sv9fKLKvKc?version=3&amp;feature=player_detailpage"><param name="allowFullScreen" value="true"><param name="allowScriptAccess" value="always"><embed src="http://www.youtube.com/v/0Sv9fKLKvKc?version=3&amp;feature=player_detailpage" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="500" height="360"></object><br>
<em><br>
<a href="http://www.youtube.com/watch?feature=player_detailpage&v=0Sv9fKLKvKc"><br>
Click to watch in HD at Youtube<br>
</a></em><a href="http://www.youtube.com/watch?feature=player_detailpage&v=0Sv9fKLKvKc"><br>
</a>
</p>
<h3><cufon class="cufon cufon-canvas" alt="Source " style="width: 45px; height: 22px; "><canvas width="60" height="26" style="width: 60px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>Source </cufontext></cufon><cufon class="cufon cufon-canvas" alt="code" style="width: 29px; height: 22px; "><canvas width="40" height="26" style="width: 40px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>code</cufontext></cufon></h3>
<p>
Hereâs the corresponding code. This is taken from the demo and cut down to show only the interaction with the touch screen.</p>
<div><div id="highlighter_494431" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">001</div><div class="line number2 index1 alt1">002</div><div class="line number3 index2 alt2">003</div><div class="line number4 index3 alt1">004</div><div class="line number5 index4 alt2">005</div><div class="line number6 index5 alt1">006</div><div class="line number7 index6 alt2">007</div><div class="line number8 index7 alt1">008</div><div class="line number9 index8 alt2">009</div><div class="line number10 index9 alt1">010</div><div class="line number11 index10 alt2">011</div><div class="line number12 index11 alt1">012</div><div class="line number13 index12 alt2">013</div><div class="line number14 index13 alt1">014</div><div class="line number15 index14 alt2">015</div><div class="line number16 index15 alt1">016</div><div class="line number17 index16 alt2">017</div><div class="line number18 index17 alt1">018</div><div class="line number19 index18 alt2">019</div><div class="line number20 index19 alt1">020</div><div class="line number21 index20 alt2">021</div><div class="line number22 index21 alt1">022</div><div class="line number23 index22 alt2">023</div><div class="line number24 index23 alt1">024</div><div class="line number25 index24 alt2">025</div><div class="line number26 index25 alt1">026</div><div class="line number27 index26 alt2">027</div><div class="line number28 index27 alt1">028</div><div class="line number29 index28 alt2">029</div><div class="line number30 index29 alt1">030</div><div class="line number31 index30 alt2">031</div><div class="line number32 index31 alt1">032</div><div class="line number33 index32 alt2">033</div><div class="line number34 index33 alt1">034</div><div class="line number35 index34 alt2">035</div><div class="line number36 index35 alt1">036</div><div class="line number37 index36 alt2">037</div><div class="line number38 index37 alt1">038</div><div class="line number39 index38 alt2">039</div><div class="line number40 index39 alt1">040</div><div class="line number41 index40 alt2">041</div><div class="line number42 index41 alt1">042</div><div class="line number43 index42 alt2">043</div><div class="line number44 index43 alt1">044</div><div class="line number45 index44 alt2">045</div><div class="line number46 index45 alt1">046</div><div class="line number47 index46 alt2">047</div><div class="line number48 index47 alt1">048</div><div class="line number49 index48 alt2">049</div><div class="line number50 index49 alt1">050</div><div class="line number51 index50 alt2">051</div><div class="line number52 index51 alt1">052</div><div class="line number53 index52 alt2">053</div><div class="line number54 index53 alt1">054</div><div class="line number55 index54 alt2">055</div><div class="line number56 index55 alt1">056</div><div class="line number57 index56 alt2">057</div><div class="line number58 index57 alt1">058</div><div class="line number59 index58 alt2">059</div><div class="line number60 index59 alt1">060</div><div class="line number61 index60 alt2">061</div><div class="line number62 index61 alt1">062</div><div class="line number63 index62 alt2">063</div><div class="line number64 index63 alt1">064</div><div class="line number65 index64 alt2">065</div><div class="line number66 index65 alt1">066</div><div class="line number67 index66 alt2">067</div><div class="line number68 index67 alt1">068</div><div class="line number69 index68 alt2">069</div><div class="line number70 index69 alt1">070</div><div class="line number71 index70 alt2">071</div><div class="line number72 index71 alt1">072</div><div class="line number73 index72 alt2">073</div><div class="line number74 index73 alt1">074</div><div class="line number75 index74 alt2">075</div><div class="line number76 index75 alt1">076</div><div class="line number77 index76 alt2">077</div><div class="line number78 index77 alt1">078</div><div class="line number79 index78 alt2">079</div><div class="line number80 index79 alt1">080</div><div class="line number81 index80 alt2">081</div><div class="line number82 index81 alt1">082</div><div class="line number83 index82 alt2">083</div><div class="line number84 index83 alt1">084</div><div class="line number85 index84 alt2">085</div><div class="line number86 index85 alt1">086</div><div class="line number87 index86 alt2">087</div><div class="line number88 index87 alt1">088</div><div class="line number89 index88 alt2">089</div><div class="line number90 index89 alt1">090</div><div class="line number91 index90 alt2">091</div><div class="line number92 index91 alt1">092</div><div class="line number93 index92 alt2">093</div><div class="line number94 index93 alt1">094</div><div class="line number95 index94 alt2">095</div><div class="line number96 index95 alt1">096</div><div class="line number97 index96 alt2">097</div><div class="line number98 index97 alt1">098</div><div class="line number99 index98 alt2">099</div><div class="line number100 index99 alt1">100</div><div class="line number101 index100 alt2">101</div><div class="line number102 index101 alt1">102</div><div class="line number103 index102 alt2">103</div><div class="line number104 index103 alt1">104</div><div class="line number105 index104 alt2">105</div><div class="line number106 index105 alt1">106</div><div class="line number107 index106 alt2">107</div><div class="line number108 index107 alt1">108</div><div class="line number109 index108 alt2">109</div><div class="line number110 index109 alt1">110</div><div class="line number111 index110 alt2">111</div><div class="line number112 index111 alt1">112</div><div class="line number113 index112 alt2">113</div><div class="line number114 index113 alt1">114</div><div class="line number115 index114 alt2">115</div><div class="line number116 index115 alt1">116</div><div class="line number117 index116 alt2">117</div><div class="line number118 index117 alt1">118</div><div class="line number119 index118 alt2">119</div><div class="line number120 index119 alt1">120</div><div class="line number121 index120 alt2">121</div><div class="line number122 index121 alt1">122</div><div class="line number123 index122 alt2">123</div><div class="line number124 index123 alt1">124</div><div class="line number125 index124 alt2">125</div><div class="line number126 index125 alt1">126</div><div class="line number127 index126 alt2">127</div><div class="line number128 index127 alt1">128</div><div class="line number129 index128 alt2">129</div><div class="line number130 index129 alt1">130</div><div class="line number131 index130 alt2">131</div><div class="line number132 index131 alt1">132</div><div class="line number133 index132 alt2">133</div><div class="line number134 index133 alt1">134</div><div class="line number135 index134 alt2">135</div><div class="line number136 index135 alt1">136</div><div class="line number137 index136 alt2">137</div><div class="line number138 index137 alt1">138</div><div class="line number139 index138 alt2">139</div><div class="line number140 index139 alt1">140</div><div class="line number141 index140 alt2">141</div><div class="line number142 index141 alt1">142</div><div class="line number143 index142 alt2">143</div><div class="line number144 index143 alt1">144</div><div class="line number145 index144 alt2">145</div><div class="line number146 index145 alt1">146</div><div class="line number147 index146 alt2">147</div><div class="line number148 index147 alt1">148</div><div class="line number149 index148 alt2">149</div><div class="line number150 index149 alt1">150</div><div class="line number151 index150 alt2">151</div><div class="line number152 index151 alt1">152</div><div class="line number153 index152 alt2">153</div><div class="line number154 index153 alt1">154</div><div class="line number155 index154 alt2">155</div><div class="line number156 index155 alt1">156</div><div class="line number157 index156 alt2">157</div><div class="line number158 index157 alt1">158</div><div class="line number159 index158 alt2">159</div><div class="line number160 index159 alt1">160</div><div class="line number161 index160 alt2">161</div><div class="line number162 index161 alt1">162</div><div class="line number163 index162 alt2">163</div><div class="line number164 index163 alt1">164</div><div class="line number165 index164 alt2">165</div><div class="line number166 index165 alt1">166</div><div class="line number167 index166 alt2">167</div><div class="line number168 index167 alt1">168</div><div class="line number169 index168 alt2">169</div><div class="line number170 index169 alt1">170</div><div class="line number171 index170 alt2">171</div><div class="line number172 index171 alt1">172</div><div class="line number173 index172 alt2">173</div><div class="line number174 index173 alt1">174</div><div class="line number175 index174 alt2">175</div><div class="line number176 index175 alt1">176</div><div class="line number177 index176 alt2">177</div><div class="line number178 index177 alt1">178</div><div class="line number179 index178 alt2">179</div><div class="line number180 index179 alt1">180</div><div class="line number181 index180 alt2">181</div><div class="line number182 index181 alt1">182</div><div class="line number183 index182 alt2">183</div><div class="line number184 index183 alt1">184</div><div class="line number185 index184 alt2">185</div><div class="line number186 index185 alt1">186</div><div class="line number187 index186 alt2">187</div><div class="line number188 index187 alt1">188</div><div class="line number189 index188 alt2">189</div><div class="line number190 index189 alt1">190</div><div class="line number191 index190 alt2">191</div><div class="line number192 index191 alt1">192</div><div class="line number193 index192 alt2">193</div><div class="line number194 index193 alt1">194</div><div class="line number195 index194 alt2">195</div><div class="line number196 index195 alt1">196</div><div class="line number197 index196 alt2">197</div><div class="line number198 index197 alt1">198</div><div class="line number199 index198 alt2">199</div><div class="line number200 index199 alt1">200</div><div class="line number201 index200 alt2">201</div><div class="line number202 index201 alt1">202</div><div class="line number203 index202 alt2">203</div><div class="line number204 index203 alt1">204</div><div class="line number205 index204 alt2">205</div><div class="line number206 index205 alt1">206</div><div class="line number207 index206 alt2">207</div><div class="line number208 index207 alt1">208</div><div class="line number209 index208 alt2">209</div><div class="line number210 index209 alt1">210</div><div class="line number211 index210 alt2">211</div><div class="line number212 index211 alt1">212</div><div class="line number213 index212 alt2">213</div><div class="line number214 index213 alt1">214</div><div class="line number215 index214 alt2">215</div><div class="line number216 index215 alt1">216</div><div class="line number217 index216 alt2">217</div><div class="line number218 index217 alt1">218</div><div class="line number219 index218 alt2">219</div><div class="line number220 index219 alt1">220</div><div class="line number221 index220 alt2">221</div><div class="line number222 index221 alt1">222</div><div class="line number223 index222 alt2">223</div><div class="line number224 index223 alt1">224</div><div class="line number225 index224 alt2">225</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include "gpio/GpioPort.h"</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include "display/touch/ADS7843AsyncTouchScreen.h"</code></div><div class="line number3 index2 alt2"><code class="cpp preprocessor">#include "display/touch/PassThroughTouchScreenCalibration.h"</code></div><div class="line number4 index3 alt1"><code class="cpp preprocessor">#include "display/touch/AveragingTouchScreenPostProcessor.h"</code></div><div class="line number5 index4 alt2"><code class="cpp preprocessor">#include "display/touch/PassThroughTouchScreenPostProcessor.h"</code></div><div class="line number6 index5 alt1"><code class="cpp preprocessor">#include "display/touch/ThreePointTouchScreenCalibrator.h"</code></div><div class="line number7 index6 alt2"><code class="cpp preprocessor">#include "exti/Exti.h"</code></div><div class="line number8 index7 alt1"><code class="cpp preprocessor">#include "spi/Spi1.h"</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">stm32plus;</code></div><div class="line number11 index10 alt2"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">stm32plus::display;</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp keyword bold">class</code> <code class="cpp plain">ADS7843Test : </code><code class="cpp keyword bold">public</code> <code class="cpp plain">Observer {</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">protected</code><code class="cpp plain">:</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// the touch screen object</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ADS7843AsyncTouchScreen *_touchScreen;</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// A SPI writer for talking to the touch screen</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SpiPollingWriter *_spiWriter;</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// The SPI peripheral that we'll attach to the writer</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SpiPeripheral *_spi;</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// An EXTI interrupt line for the pen IRQ</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ExtiBase *_exti;</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// The GPIO port corresponding to the pen IRQ</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">GpioPort *_penIrqPort;</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// we've got the pen IRQ on pin 6.</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">static</code> <code class="cpp keyword bold">const</code> <code class="cpp color1 bold">int</code> <code class="cpp plain">_penIrqPortIndex=6;</code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// calibrator and error-correction post-processors</code></div><div class="line number36 index35 alt1">&nbsp;</div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">PassThroughTouchScreenCalibration *_passThroughCalibration;</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">AveragingTouchScreenPostProcessor *_averagingPostProcessor;</code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">PassThroughTouchScreenPostProcessor *_passThroughPostProcessor;</code></div><div class="line number40 index39 alt1">&nbsp;</div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// the observer implementation will set this</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// when the interrupt fires</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">volatile</code> <code class="cpp color1 bold">bool</code> <code class="cpp plain">_clicked;</code></div><div class="line number44 index43 alt1">&nbsp;</div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">public</code><code class="cpp plain">:</code></div><div class="line number46 index45 alt1">&nbsp;</div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/*</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* Demo setup and preparation</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number50 index49 alt1">&nbsp;</div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">run() {</code></div><div class="line number52 index51 alt1">&nbsp;</div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// set up the touch screen</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">initTouchScreen();</code></div><div class="line number55 index54 alt2">&nbsp;</div><div class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// run the demo and don't come back</code></div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">doDemo();</code></div><div class="line number58 index57 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number59 index58 alt2">&nbsp;</div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/*</code></div><div class="line number61 index60 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* initialise the touch screen</code></div><div class="line number62 index61 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number63 index62 alt2">&nbsp;</div><div class="line number64 index63 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">initTouchScreen() {</code></div><div class="line number65 index64 alt2">&nbsp;</div><div class="line number66 index65 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// create the initial pass through calibration object that</code></div><div class="line number67 index66 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// allows us to create the touch screen object ready for</code></div><div class="line number68 index67 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// calibrating for real</code></div><div class="line number69 index68 alt2">&nbsp;</div><div class="line number70 index69 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_passThroughCalibration=</code></div><div class="line number71 index70 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">new</code> <code class="cpp plain">PassThroughTouchScreenCalibration;</code></div><div class="line number72 index71 alt1">&nbsp;</div><div class="line number73 index72 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// create an averaging post-processor for use in accurate</code></div><div class="line number74 index73 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// mode that does 4x oversampling on the incoming data</code></div><div class="line number75 index74 alt2">&nbsp;</div><div class="line number76 index75 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_averagingPostProcessor=</code></div><div class="line number77 index76 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">new</code> <code class="cpp plain">AveragingTouchScreenPostProcessor(4);</code></div><div class="line number78 index77 alt1">&nbsp;</div><div class="line number79 index78 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// create the do-nothing post-processor that</code></div><div class="line number80 index79 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// is used in non-accurate mode</code></div><div class="line number81 index80 alt2">&nbsp;</div><div class="line number82 index81 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_passThroughPostProcessor=</code></div><div class="line number83 index82 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">new</code> <code class="cpp plain">PassThroughTouchScreenPostProcessor;</code></div><div class="line number84 index83 alt1">&nbsp;</div><div class="line number85 index84 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// we've got the PENIRQ attached to GPIOB, port 6. Attach</code></div><div class="line number86 index85 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// an EXTI line to it and since it's active low we want to</code></div><div class="line number87 index86 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// be called back via our Observer implementation when the</code></div><div class="line number88 index87 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// signal falls from high to low.</code></div><div class="line number89 index88 alt2">&nbsp;</div><div class="line number90 index89 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_penIrqPort=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">GpioPort(GPIOB);</code></div><div class="line number91 index90 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_exti=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">Exti6(</code></div><div class="line number92 index91 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">EXTI_Mode_Interrupt,</code></div><div class="line number93 index92 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">EXTI_Trigger_Falling,</code></div><div class="line number94 index93 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">(*_penIrqPort)[_penIrqPortIndex]);</code></div><div class="line number95 index94 alt2">&nbsp;</div><div class="line number96 index95 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// we've got the SPI interface to the touchscreen wired to</code></div><div class="line number97 index96 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// SPI1, and since SPI1 is the fast one on the STM32 we'll</code></div><div class="line number98 index97 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// divide the 72Mhz clock by the maximum of 256 instead of</code></div><div class="line number99 index98 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// 128 which we'd use on SPI2.</code></div><div class="line number100 index99 alt1">&nbsp;</div><div class="line number101 index100 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_spi=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">Spi1(SPI_Direction_2Lines_FullDuplex,</code></div><div class="line number102 index101 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_Mode_Master,</code></div><div class="line number103 index102 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_BaudRatePrescaler_256,</code></div><div class="line number104 index103 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_FirstBit_MSB,</code></div><div class="line number105 index104 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_CPOL_Low,</code></div><div class="line number106 index105 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_CPHA_1Edge);</code></div><div class="line number107 index106 alt2">&nbsp;</div><div class="line number108 index107 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_spiWriter=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">SpiPollingWriter(*_spi);</code></div><div class="line number109 index108 alt2">&nbsp;</div><div class="line number110 index109 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// now create the touch screen, initially in non-accurate</code></div><div class="line number111 index110 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// mode with some dummy calibration data because the first</code></div><div class="line number112 index111 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// thing we're going to do in the demo is calibrate it</code></div><div class="line number113 index112 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// with the 3-point routine.</code></div><div class="line number114 index113 alt1">&nbsp;</div><div class="line number115 index114 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_touchScreen=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">ADS7843AsyncTouchScreen(</code></div><div class="line number116 index115 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_passThroughCalibration,</code></div><div class="line number117 index116 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_passThroughPostProcessor,</code></div><div class="line number118 index117 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_spiWriter,(*_penIrqPort)[_penIrqPortIndex],</code></div><div class="line number119 index118 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_exti</code></div><div class="line number120 index119 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">);</code></div><div class="line number121 index120 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number122 index121 alt1">&nbsp;</div><div class="line number123 index122 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/*</code></div><div class="line number124 index123 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* Calibrate the touch screen using</code></div><div class="line number125 index124 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* the accurate 3-point method</code></div><div class="line number126 index125 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number127 index126 alt2">&nbsp;</div><div class="line number128 index127 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">calibrate() {</code></div><div class="line number129 index128 alt2">&nbsp;</div><div class="line number130 index129 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// create the calibrator. _gl is a GraphicsLibrary</code></div><div class="line number131 index130 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// instance and _font is a Font instance. See demo code</code></div><div class="line number132 index131 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// for the initialisation of these objects.</code></div><div class="line number133 index132 alt2">&nbsp;</div><div class="line number134 index133 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">TouchScreenCalibration* newResults;</code></div><div class="line number135 index134 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ThreePointTouchScreenCalibrator calibrator(</code></div><div class="line number136 index135 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_gl,</code></div><div class="line number137 index136 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_font,</code></div><div class="line number138 index137 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_touchScreen</code></div><div class="line number139 index138 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">);</code></div><div class="line number140 index139 alt1">&nbsp;</div><div class="line number141 index140 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// important preparation for calibration: we must set the</code></div><div class="line number142 index141 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// screen to pass through mode so that the calibrator sees</code></div><div class="line number143 index142 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// raw co-ordinates and not calibrated!</code></div><div class="line number144 index143 alt1">&nbsp;</div><div class="line number145 index144 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_touchScreen-&gt;setCalibration(*_passThroughCalibration);</code></div><div class="line number146 index145 alt1">&nbsp;</div><div class="line number147 index146 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// calibrate the screen and get the new results. A real</code></div><div class="line number148 index147 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// application can use the serialise and deserialise</code></div><div class="line number149 index148 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// methods of the TouchScreenCalibration base class to</code></div><div class="line number150 index149 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// read/write the calibration data to a persistent stream</code></div><div class="line number151 index150 alt2">&nbsp;</div><div class="line number152 index151 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(!calibrator.calibrate(newResults))</code></div><div class="line number153 index152 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number154 index153 alt1">&nbsp;</div><div class="line number155 index154 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// store the new results</code></div><div class="line number156 index155 alt1">&nbsp;</div><div class="line number157 index156 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(_calibrationResults!=NULL)</code></div><div class="line number158 index157 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">delete</code> <code class="cpp plain">_calibrationResults;</code></div><div class="line number159 index158 alt2">&nbsp;</div><div class="line number160 index159 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_calibrationResults=newResults;</code></div><div class="line number161 index160 alt2">&nbsp;</div><div class="line number162 index161 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// re-init the touch screen with the calibration data</code></div><div class="line number163 index162 alt2">&nbsp;</div><div class="line number164 index163 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_touchScreen-&gt;setCalibration(*_calibrationResults);</code></div><div class="line number165 index164 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number166 index165 alt1">&nbsp;</div><div class="line number167 index166 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/*</code></div><div class="line number168 index167 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* Go into a loop running the demo</code></div><div class="line number169 index168 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number170 index169 alt1">&nbsp;</div><div class="line number171 index170 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">doDemo() {</code></div><div class="line number172 index171 alt1">&nbsp;</div><div class="line number173 index172 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// calibrate the screen for first use</code></div><div class="line number174 index173 alt1">&nbsp;</div><div class="line number175 index174 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">calibrate();</code></div><div class="line number176 index175 alt1">&nbsp;</div><div class="line number177 index176 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// register as an observer for events</code></div><div class="line number178 index177 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// sent by the TouchScreen</code></div><div class="line number179 index178 alt2">&nbsp;</div><div class="line number180 index179 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_touchScreen-&gt;insertObserver(*</code><code class="cpp keyword bold">this</code><code class="cpp plain">);</code></div><div class="line number181 index180 alt2">&nbsp;</div><div class="line number182 index181 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(;;) {</code></div><div class="line number183 index182 alt2">&nbsp;</div><div class="line number184 index183 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// wait for a click</code></div><div class="line number185 index184 alt2">&nbsp;</div><div class="line number186 index185 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(_clicked=</code><code class="cpp keyword bold">false</code><code class="cpp plain">;!_clicked;);</code></div><div class="line number187 index186 alt2">&nbsp;</div><div class="line number188 index187 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">do</code> <code class="cpp plain">{</code></div><div class="line number189 index188 alt2">&nbsp;</div><div class="line number190 index189 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// get click-coordinates from the panel</code></div><div class="line number191 index190 alt2">&nbsp;</div><div class="line number192 index191 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(_touchScreen-&gt;getCoordinates(p)) {</code></div><div class="line number193 index192 alt2">&nbsp;</div><div class="line number194 index193 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// if the click is on screen, plot it. This bounds</code></div><div class="line number195 index194 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// check is necessary because the touch screen can</code></div><div class="line number196 index195 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// and does extend past the LCD edges.</code></div><div class="line number197 index196 alt2">&nbsp;</div><div class="line number198 index197 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number199 index198 alt2">&nbsp;</div><div class="line number200 index199 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// carry on while the pen is still down</code></div><div class="line number201 index200 alt2">&nbsp;</div><div class="line number202 index201 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">while</code><code class="cpp plain">(!(*_penIrqPort)[_penIrqPortIndex].read());</code></div><div class="line number203 index202 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number204 index203 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number205 index204 alt2">&nbsp;</div><div class="line number206 index205 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/*</code></div><div class="line number207 index206 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* Implementation of the Observer pattern. This will be</code></div><div class="line number208 index207 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* called back after the TouchScreen has received an</code></div><div class="line number209 index208 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">* EXTI interrupt and processed the incoming data.</code></div><div class="line number210 index209 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number211 index210 alt2">&nbsp;</div><div class="line number212 index211 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">onNotify(</code></div><div class="line number213 index212 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Observable&amp; sender __attribute__((unused)),</code></div><div class="line number214 index213 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ObservableEvent::E event,</code></div><div class="line number215 index214 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">*context __attribute__((unused))) {</code></div><div class="line number216 index215 alt1">&nbsp;</div><div class="line number217 index216 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// check that the event is what we were expecting</code></div><div class="line number218 index217 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// and set the clicked flag if it is</code></div><div class="line number219 index218 alt2">&nbsp;</div><div class="line number220 index219 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(event==ObservableEvent::TouchPanel_ReadyForSampling</code></div><div class="line number221 index220 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">&amp;&amp; !_clicked)</code></div><div class="line number222 index221 alt1">&nbsp;</div><div class="line number223 index222 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_clicked=</code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number224 index223 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number225 index224 alt2"><code class="cpp plain">};</code></div></div></td></tr></tbody></table></div></div>
<p>
Now letsâ break down the code into logical sections and explain what each one is doing.
</p>
<h3><cufon class="cufon cufon-canvas" alt="Calibration " style="width: 70px; height: 22px; "><canvas width="85" height="26" style="width: 85px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>Calibration </cufontext></cufon><cufon class="cufon cufon-canvas" alt="model" style="width: 37px; height: 22px; "><canvas width="51" height="26" style="width: 51px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>model</cufontext></cufon></h3>
<p></p><div><div id="highlighter_311152" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// create the initial pass through calibration object that</code></div><div class="line number2 index1 alt1"><code class="cpp comments">// allows us to create the touch screen object ready for</code></div><div class="line number3 index2 alt2"><code class="cpp comments">// calibrating for real</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp plain">_passThroughCalibration=</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">new</code> <code class="cpp plain">PassThroughTouchScreenCalibration;</code></div></div></td></tr></tbody></table></div></div>
<p>stm32plus separates <em>calibrators</em> from <em>calibration data</em>. A <em>calibrator</em> is a class capable of producing an instance of the abstract <em>TouchScreenCalibration</em> class. A concrete instance of <em>TouchScreenCalibration</em> is able to translate raw panel co-ordinates into LCD co-ordinates as well as save and load itâs state to and from a <em>stream</em> instance.
</p>
<p>
What weâre doing here is creating a pass-through calibration object that doesnât do anything with the raw co-ordinates. A <em>calibrator</em> will need this to be the active calibration on the touch screen so that it doesnât see mangled co-ordinates while itâs trying to do itâs calibration routine!
</p>
<h3><cufon class="cufon cufon-canvas" alt="Post-processing " style="width: 101px; height: 22px; "><canvas width="116" height="26" style="width: 116px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>Post-processing </cufontext></cufon><cufon class="cufon cufon-canvas" alt="model" style="width: 37px; height: 22px; "><canvas width="51" height="26" style="width: 51px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>model</cufontext></cufon></h3>
<div><div id="highlighter_618300" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// create an averaging post-processor for use in accurate</code></div><div class="line number2 index1 alt1"><code class="cpp comments">// mode that does 4x oversampling on the incoming data</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp plain">_averagingPostProcessor=</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">new</code> <code class="cpp plain">AveragingTouchScreenPostProcessor(4);</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp comments">// create the do-nothing post-processor that</code></div><div class="line number8 index7 alt1"><code class="cpp comments">// is used in non-accurate mode</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="cpp plain">_passThroughPostProcessor=</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">new</code> <code class="cpp plain">PassThroughTouchScreenPostProcessor;</code></div></div></td></tr></tbody></table></div></div>
<p>
After the <em>TouchScreen</em> instance has produced what it considers to be a good, calibrated co-ordinate we have the option of running it through a post-processor.
</p>
<p>
The ADS7843 can be a devil of a noisy device so I include a simple post-processor that accumulates successive samples and returns an average. The example in the demo does 4x averaging. In practice this remains fast to the user while producing very accurate samples with noise pretty much completely gone.
</p>
<h3><cufon class="cufon cufon-canvas" alt="PENIRQ " style="width: 47px; height: 22px; "><canvas width="62" height="26" style="width: 62px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>PENIRQ </cufontext></cufon><cufon class="cufon cufon-canvas" alt="handling" style="width: 53px; height: 22px; "><canvas width="64" height="26" style="width: 64px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>handling</cufontext></cufon></h3>
<p></p><div><div id="highlighter_111072" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// we've got the PENIRQ attached to GPIOB, port 6. Attach</code></div><div class="line number2 index1 alt1"><code class="cpp comments">// an EXTI line to it and since it's active low we want to</code></div><div class="line number3 index2 alt2"><code class="cpp comments">// be called back via our Observer implementation when the</code></div><div class="line number4 index3 alt1"><code class="cpp comments">// signal falls from high to low.</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="cpp plain">_penIrqPort=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">GpioPort(GPIOB);</code></div><div class="line number7 index6 alt2"><code class="cpp plain">_exti=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">Exti6(</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">EXTI_Mode_Interrupt,</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">EXTI_Trigger_Falling,</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">(*_penIrqPort)[_penIrqPortIndex]);</code></div></div></td></tr></tbody></table></div></div>
<p>The <em>PENIRQ</em> line is driven low by the touch screen when the user touches the panel and is held low until pressure is released. We handle this case by creating an <em>Exti</em> (external interrupt) instance that is coded to respond to the falling edge of the signal.
</p>
<p></p><div><div id="highlighter_546247" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">class</code> <code class="cpp plain">ADS7843Test : </code><code class="cpp keyword bold">public</code> <code class="cpp plain">Observer {</code></div></div></td></tr></tbody></table></div></div>
<p>and laterâ¦</p>
<div><div id="highlighter_379296" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// register as an observer for events published by</code></div><div class="line number2 index1 alt1"><code class="cpp comments">// the TouchScreen</code></div><div class="line number3 index2 alt2"><code class="cpp plain">_touchScreen-&gt;insertObserver(*</code><code class="cpp keyword bold">this</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div>
<p>stm32plus implements an <a href="http://en.wikipedia.org/wiki/Observer_pattern" target="_blank"><em>Observer pattern</em></a> for interrupt handling. Concrete instances of the <em>TouchScreen</em> abstract class declare themselves as <em>Observable</em> which allows us to insert ourselves as an <em>Observer</em>. The <em>Exti</em> class is also observable, and the TouchScreen implementation registers itself as an observer of the Exti and then passes it on to us as a signal that its ready to start processing data.
</p>
<p></p><div><div id="highlighter_417686" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/*</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* Implementation of the Observer pattern. This will be</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* called back after the TouchScreen has received an</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">* EXTI interrupt and processed the incoming data.</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">onNotify(</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Observable&amp; sender __attribute__((unused)),</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ObservableEvent::E event,</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">void</code> <code class="cpp plain">*context __attribute__((unused))) {</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// check that the event is what we were expecting</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// and set the clicked flag if it is</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(event==ObservableEvent::TouchPanel_ReadyForSampling</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">&amp;&amp; !_clicked)</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">_clicked=</code><code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number20 index19 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>The contract of the <em>Observer</em> class is that we implement <em>onNotify</em> to handle the incoming interrupt. There can be many observers registered at the same time. stm32plus maintains a linked list of interested observers and calls them each in sequence.
</p>
<p>
In our implementation of <em>onNotify</em> we check that the incoming event is the one we are expecting (it always will be, but the check is included to show how itâs done) then we set the <em>_clicked</em> flag that the non-interrupt code is waiting for.
</p>
<p>
Why donât we handle the touch screen interaction in the interrupt handler? Interrupt handlers should be kept light and fast so that other interrupt handlers in your code that may depend on stricter timing parameters, or are maintaining a clock tick, are not affected by your processing.
</p>
<h3><cufon class="cufon cufon-canvas" alt="The " style="width: 25px; height: 22px; "><canvas width="40" height="26" style="width: 40px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>The </cufontext></cufon><cufon class="cufon cufon-canvas" alt="SPI " style="width: 23px; height: 22px; "><canvas width="38" height="26" style="width: 38px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>SPI </cufontext></cufon><cufon class="cufon cufon-canvas" alt="interface" style="width: 56px; height: 22px; "><canvas width="67" height="26" style="width: 67px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>interface</cufontext></cufon></h3>
<p></p><div><div id="highlighter_31404" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// we've got the SPI interface to the touchscreen wired to</code></div><div class="line number2 index1 alt1"><code class="cpp comments">// SPI1, and since SPI1 is the fast one on the STM32 we'll</code></div><div class="line number3 index2 alt2"><code class="cpp comments">// divide the 72Mhz clock by the maximum of 256 instead of</code></div><div class="line number4 index3 alt1"><code class="cpp comments">// 128 which we'd use on SPI2.</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="cpp plain">_spi=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">Spi1(SPI_Direction_2Lines_FullDuplex,</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_Mode_Master,</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_BaudRatePrescaler_256,</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_FirstBit_MSB,</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_CPOL_Low,</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">SPI_CPHA_1Edge);</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp plain">_spiWriter=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">SpiPollingWriter(*_spi);</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp comments">// now create the touch screen, initially in non-accurate</code></div><div class="line number16 index15 alt1"><code class="cpp comments">// mode with some dummy calibration data because the first</code></div><div class="line number17 index16 alt2"><code class="cpp comments">// thing we're going to do in the demo is calibrate it</code></div><div class="line number18 index17 alt1"><code class="cpp comments">// with the 3-point routine.</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="cpp plain">_touchScreen=</code><code class="cpp keyword bold">new</code> <code class="cpp plain">ADS7843AsyncTouchScreen(</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_passThroughCalibration,</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_passThroughPostProcessor,</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_spiWriter,(*_penIrqPort)[_penIrqPortIndex],</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_exti</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">);</code></div></div></td></tr></tbody></table></div></div>
<p>The ADS7843 is an SPI device so we create an stm32plus SPI object and attach it to a polling (blocking) writer. We then create the touch screen object with the writer, the exti, the calibration and the post processor objects.
</p>
<h3><cufon class="cufon cufon-canvas" alt="The " style="width: 25px; height: 22px; "><canvas width="40" height="26" style="width: 40px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>The </cufontext></cufon><cufon class="cufon cufon-canvas" alt="calibrator" style="width: 60px; height: 22px; "><canvas width="73" height="26" style="width: 73px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>calibrator</cufontext></cufon></h3>
<div><div id="highlighter_99531" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">calibrate() {</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// create the calibrator. _gl is a GraphicsLibrary</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// instance and _font is a Font instance. See demo code</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// for the initialisation of these objects.</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">TouchScreenCalibration* newResults;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">ThreePointTouchScreenCalibrator calibrator(</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_gl,</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_font,</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*_touchScreen</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">);</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// important preparation for calibration: we must set the</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// screen to pass through mode so that the calibrator sees</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// raw co-ordinates and not calibrated!</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">_touchScreen-&gt;setCalibration(*_passThroughCalibration);</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// calibrate the screen and get the new results. A real</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// application can use the serialise and deserialise</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// methods of the TouchScreenCalibration base class to</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// read/write the calibration data to a persistent stream</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(!calibrator.calibrate(newResults))</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number27 index26 alt2">&nbsp;</div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// store the new results</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(_calibrationResults!=NULL)</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">delete</code> <code class="cpp plain">_calibrationResults;</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">_calibrationResults=newResults;</code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// re-init the touch screen with the calibration data</code></div><div class="line number36 index35 alt1">&nbsp;</div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">_touchScreen-&gt;setCalibration(*_calibrationResults);</code></div><div class="line number38 index37 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Iâve already explained the calibration mode (above) so I wonât go through all that again. The method here shows how to set up and call a calibrator, in this case the 3-point calibrator.
</p>
<p>
After creating the calibrator, the touch screen must be put into pass-through mode and then the calibrator is called. If it completes successfully then the new calibration results that it produced are set as the new calibration data for the touch screen.
</p>
<p>
The 3-point calibration routine is an implementation of the mathematics in <a href="http://www.ti.com/lit/an/slyt277/slyt277.pdf">this excellent paper</a> from TI (itâs called <em>Calibration in touch-screen systems</em> in case this link breaks and you need to search for it). With just 3 samples from the user it is able to correct for touch screens that are mechanically misaligned horizontally, vertically and even rotationally.
</p>
<h3><cufon class="cufon cufon-canvas" alt="The " style="width: 25px; height: 22px; "><canvas width="40" height="26" style="width: 40px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>The </cufontext></cufon><cufon class="cufon cufon-canvas" alt="main " style="width: 33px; height: 22px; "><canvas width="49" height="26" style="width: 49px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>main </cufontext></cufon><cufon class="cufon cufon-canvas" alt="loop" style="width: 26px; height: 22px; "><canvas width="37" height="26" style="width: 37px; height: 26px; top: -4px; left: -1px; "></canvas><cufontext>loop</cufontext></cufon></h3>
<div><div id="highlighter_731192" class="syntaxhighlighter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">doDemo() {</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// calibrate the screen for first use</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">calibrate();</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">// register as an observer for interrupts on the EXTI line</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">_touchScreen-&gt;insertObserver(*</code><code class="cpp keyword bold">this</code><code class="cpp plain">);</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(;;) {</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// wait for a click</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(_clicked=</code><code class="cpp keyword bold">false</code><code class="cpp plain">;!_clicked;);</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">do</code> <code class="cpp plain">{</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// get click-coordinates from the panel</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(_touchScreen-&gt;getCoordinates(p)) {</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// if the click is on screen, plot it. This bounds</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// check is necessary because the touch screen can</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// and does extend past the LCD edges.</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// carry on while the pen is still down</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">while</code><code class="cpp plain">(!(*_penIrqPort)[_penIrqPortIndex].read());</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number33 index32 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Hereâs an abbreviated version of the demo main loop edited to keep only the flow of logic. First we calibrate the screen, then we become an observer of events from the <em>Exti</em> instance then we just go into a tight loop waiting for the interrupt handler to set the <em>_clicked</em> flag.
</p>
<p>
When the touch screen is clicked we get the co-ordinates of the click and act on them. We then go into a continuous loop processing more clicks until the pen is raised from the screen. This is indicated either by us noticing the <em>Exti</em> line going high in the <em>do-while</em> condition, or it happening during the act of getting a co-ordinate which will be indicated by <em>getCoordinates()</em> returning false.
</p>
<h2><cufon class="cufon cufon-canvas" alt="Download " style="width: 69px; height: 24px; "><canvas width="85" height="29" style="width: 85px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>Download </cufontext></cufon><cufon class="cufon cufon-canvas" alt="source " style="width: 49px; height: 24px; "><canvas width="66" height="29" style="width: 66px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>source </cufontext></cufon><cufon class="cufon cufon-canvas" alt="code" style="width: 32px; height: 24px; "><canvas width="45" height="29" style="width: 45px; height: 29px; top: -5px; left: -1px; "></canvas><cufontext>code</cufontext></cufon></h2>
<p>
The stm32plus source package is available from <a href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/index.php/downloads">my downloads page</a>.</p>
			
						
																	
		</div> <!-- end .content -->
		
		<div class="entry-bottom-top"></div>
	
		<div class="entry-meta clearfix">
			<p class="meta"><span class="main">Posted by <a href="http://andybrown.me.uk/ws/author/admin/" title="Posts by Andy" rel="author">Andy</a>									 in <a href="http://andybrown.me.uk/ws/category/stm32-2/" title="View all posts in STM32" rel="category tag">STM32</a>, <a href="http://andybrown.me.uk/ws/category/stm32-2/stm32plus/" title="View all posts in stm32plus" rel="category tag">stm32plus</a>
			</span> <span class="comment-count"><a href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/#comments" title="Comment on stm32plus: ADS7843 touch screen driver"><span class="IDCommentsReplace" style="display:none"><cufon class="cufon cufon-canvas" alt="1312" style="width: 17px; height: 14px; "><canvas width="24" height="17" style="width: 24px; height: 17px; top: -3px; left: 0px; "></canvas><cufontext>1312</cufontext></cufon></span><cufon class="cufon cufon-canvas" alt="1" style="width: 4px; height: 14px; "><canvas width="12" height="17" style="width: 12px; height: 17px; top: -3px; left: 0px; "></canvas><cufontext>1</cufontext></cufon><span style="display:none" id="IDCommentPostInfoPermalink1312"><cufon class="cufon cufon-canvas" alt="http%3A%2F%2Fandybrown.me.uk%2Fws%2F2012%2F01%2F07%2Fstm32plus-ads7843-touch-screen-driver%2F" style="width: 440px; height: 14px; "><canvas width="447" height="17" style="width: 447px; height: 17px; top: -3px; left: 0px; "></canvas><cufontext>http%3A%2F%2Fandybrown.me.uk%2Fws%2F2012%2F01%2F07%2Fstm32plus-ads7843-touch-screen-driver%2F</cufontext></cufon></span><span style="display:none" id="IDCommentPostInfoTitle1312"><cufon class="cufon cufon-canvas" alt="stm32plus%3A+ADS7843+touch+screen+driver" style="width: 195px; height: 14px; "><canvas width="203" height="17" style="width: 203px; height: 17px; top: -3px; left: 0px; "></canvas><cufontext>stm32plus%3A+ADS7843+touch+screen+driver</cufontext></cufon></span><span style="display:none" id="IDCommentPostInfoTime1312"><cufon class="cufon cufon-canvas" alt="2012-01-07+17%3A04%3A04" style="width: 112px; height: 14px; "><canvas width="119" height="17" style="width: 119px; height: 17px; top: -3px; left: 0px; "></canvas><cufontext>2012-01-07+17%3A04%3A04</cufontext></cufon></span><span style="display:none" id="IDCommentPostInfoAuthor1312"><cufon class="cufon cufon-canvas" alt="Andy" style="width: 20px; height: 14px; "><canvas width="27" height="17" style="width: 27px; height: 17px; top: -3px; left: 0px; "></canvas><cufontext>Andy</cufontext></cufon></span><span style="display:none" id="IDCommentPostInfoGuid1312"><cufon class="cufon cufon-canvas" alt="http%3A%2F%2Fandybrown.me.uk%2Fws%2F%3Fp%3D1312" style="width: 234px; height: 14px; "><canvas width="241" height="17" style="width: 241px; height: 17px; top: -3px; left: 0px; "></canvas><cufontext>http%3A%2F%2Fandybrown.me.uk%2Fws%2F%3Fp%3D1312</cufontext></cufon></span></a></span></p>
					</div> <!-- end .entry-meta -->		
		
	</div> <!-- end .main -->
	
	<div class="entry-bottom"></div>
</div> <!-- end .entry -->




    <div class="entry post clearfix">
      <div class="entry-content">
	<div class="entry-top"></div>
	<div class="post clearfix">
	  <div class="content clearfix">
       	    <div id="idc-container-parent" class=""><div id="idc-container" class="idc"><div id="IDCommentPopup" style="display: none;" class="idc-info"> <div> <div id="IDCommentPopupInner"> <a href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/#" class="idc-close"><span>Close</span></a> <h6>Forgot password?</h6> <form> <label for="txtResolveEmail">Please put in your email:</label> <input class="idc-text" id="txtResolveEmail" type="text"> <a href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/#" class="idc-btn_s"><span>Send me my password!</span></a> </form> <p class="idc-bottom"><a href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/#">Close message</a></p> </div> <div class="idc-bottom"></div> </div> </div><div id="IDCommentsHead" class="idc-head"> <span id="IDCommentsHeadDivider" style="display:none"></span> <div class="idc-right"> <a href="javascript: showLogin();" id="IDCommentsHeadLogin" class="idc-head_tools-login"><span>Login</span><span class="idc-r"></span></a> <div class="idc-share" onmouseover="showFollowThisDiscussion();" onmouseout="hideFollowThisDiscussion();"> <div class="idc-share_inner" id="IDCommentsHeadFollowMenu" onmouseover="showFollowThisDiscussion();" onmouseout="hideFollowThisDiscussion();"> <ul class="idc-share-tabs" onmouseover="showFollowThisDiscussion();" onmouseout="hideFollowThisDiscussion();"> <li id="IDShareMenuPost" class="idc-sel"><a href="javascript: IDShowFollowPost();"><span>This blog post</span></a></li> <li id="IDShareMenuBlog"><a href="javascript: IDShowFollowBlog();"><span>All blog posts</span></a></li> </ul> <div id="divIdcSharePost" onmouseover="showFollowThisDiscussion();" onmouseout="hideFollowThisDiscussion();"> <p>Subscribe to this blog post's comments through...</p> <ul class="idc-share-list"> <li><a href="http://www.netvibes.com/subscribe.php?type=rss&url=http://intensedebate.com/postRSS/118399826"><img id="IDCommentsShowNetvibes" width="91" height="17" border="0" alt="Add to netvibes"></a></li> <li><a href="http://add.my.yahoo.com/rss?url=http://intensedebate.com/postRSS/118399826"><img id="IDCommentsShowYahoo" border="0" alt="Add to My Yahoo!"></a></li> </ul> <ul class="idc-share-list"> <li><a href="http://fusion.google.com/add?source=atgs&feedurl=http://intensedebate.com/postRSS/118399826"><img id="IDCommentsShowGoogle" border="0" alt="Add to Google"></a></li> <li><a href="http://my.msn.com/addtomymsn.armx?id=rss&ut=http://intensedebate.com/postRSS/118399826"><img id="IDCommentsShowMsn" border="0" style="width: 92px; height: 17px;" alt="Add to Microsoft Live"></a></li> </ul> <p class="idc-b"><a href="http://intensedebate.com/postRSS/118399826"><img id="IDCommentsShowRss" alt="RSS Icon"> RSS Feed</a></p> <div class="idc-subscribe-email"> <p><strong>Subscribe via email</strong></p> <span id="IDCSubscribeSpan0"><input type="text" value="Email Address" id="IDCSubscribeEmail0" class="idc-text" onfocus="this.style.color=&#39;#333&#39;;this.value=&#39;&#39;;" onblur="if(this.value==&#39;&#39;){this.style.color=&#39;#ccc&#39;;this.value=&#39;Email Address&#39;;}"></span> <span id="IDCSubscribeSubmit0"><a class="idc-btn_s" href="javascript:IDCSubscribeByEmail(0);"><span></span><span class="idc-r">Subscribe</span></a> </span> </div> </div> <div id="divIdcShareBlog" style="display:none" onmouseover="showFollowThisDiscussion();" onmouseout="hideFollowThisDiscussion();"> <p>Subscribe to this blog's comments through...</p> <ul class="idc-share-list"> <li><a href="http://www.netvibes.com/subscribe.php?type=rss&url=http://intensedebate.com/allBlogCommentsRSS/219851"><img id="IDCommentsShowNetvibes2" width="91" height="17" border="0" alt="Add to netvibes"></a></li> <li><a href="http://add.my.yahoo.com/rss?url=http://intensedebate.com/allBlogCommentsRSS/219851"><img border="0" alt="Add to My Yahoo!" id="IDCommentsShowYahoo2"></a></li> </ul> <ul class="idc-share-list"> <li><a href="http://fusion.google.com/add?source=atgs&feedurl=http://intensedebate.com/allBlogCommentsRSS/219851"><img id="IDCommentsShowGoogle2" border="0" alt="Add to Google"></a></li> <li><a href="http://my.msn.com/addtomymsn.armx?id=rss&ut=http://intensedebate.com/allBlogCommentsRSS/219851"><img border="0" id="IDCommentsShowMsn2" style="width: 92px; height: 17px;" alt="Add to Microsoft Live"></a></li> </ul> <p class="idc-b"><a href="http://intensedebate.com/allBlogCommentsRSS/219851"><img alt="RSS Icon" id="IDCommentsShowRss2"> RSS Feed</a></p> <div class="idc-subscribe-email"> <p><strong>Subscribe via email</strong></p> <span id="IDCSubscribeSpan1"><input type="text" value="Email Address" id="IDCSubscribeEmail1" class="idc-text" onfocus="this.style.color=&#39;#333&#39;;this.value=&#39;&#39;;" onblur="if(this.value==&#39;&#39;){this.style.color=&#39;#ccc&#39;;this.value=&#39;Email Address&#39;;}"></span> <span id="IDCSubscribeSubmit1"><a class="idc-btn_s" href="javascript:IDCSubscribeByEmail(1);"><span></span><span class="idc-r">Subscribe</span></a> </span> </div> </div> </div> <a href="http://intensedebate.com/postRSS/118399826" class="idc-head_tools-share" title="http://intensedebate.com/postRSS/118399826" onmouseover="showFollowThisDiscussion();" onmouseout="hideFollowThisDiscussion();">Follow the discussion</a> </div> </div><h3><span id="idc-commentcount_label">Comments</span><span id="idc-commentcount_wrap"> (<span id="idc-commentcount">5</span>)</span></h3><input type="hidden" id="userid" value=""> <div class="idc-head_action idc-loggingin"> <span><img style="padding-right: 5px" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/ajax-loader.gif" alt="Loading..."> Logging you in...</span> </div> <div class="idc-head_action idc-login" id="IDLoginPopup"> <form id="IDfrmHeaderLogin" method="post" action="http://intensedebate.com/login"> <a href="javascript: hideLoginSignup();" class="idc-close"><span>Close</span></a> <p><strong>Login to IntenseDebate</strong></p> <p>Or <a href="http://intensedebate.com/signup" class="snap_noshots" target="_blank">create an account</a></p> <div class="idc-columns"> <div class="idc-divide"> <label for="IDtxtLoginEmail">Username or Email:</label> </div> <div class="idc-divide"> <label for="IDtxtLoginPass">Password:</label> </div> <span class="idc-clear"></span> </div> <div class="idc-divide"> <input id="IDtxtLoginEmail" name="txtLoginEmail" value="" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);" type="text"> </div> <div class="idc-divide"> <input id="IDtxtLoginPass" name="txtLoginPass" class="idc-text idc-password" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);" type="password"> <p class="idc-fade" <a="" href="javascript: showForgotPassword();">Forgot login?</p> </div> <div class="idc-head_b"> <a class="idc-useopenid snap_noshots" href="javascript: showLoginOpenID();">OpenID</a> <div class="idc-tools"> <a class="idc-btn_l-secondary" href="javascript: hideLoginSignup();"><span></span><span class="idc-r">Cancel</span></a> <a href="javascript: logUserIn();" class="idc-btn_l"><span></span><span class="idc-r"><strong>Login</strong></span></a> </div> </div> </form> </div> <div class="idc-head_action idc-wp-login" id="IDWPLoginPopup"> <form id="IDfrmHeaderWPLogin" method="post" action="http://intensedebate.com/wp-login.php"> <a href="javascript: hideLoginSignup();" class="idc-close"><span>Close</span></a> <span> <img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/wordpress-logo.png" style="margin-bottom: -10px;"> <span style="font-size: 25px; padding-left: 5px; font-family: verdana,serif;">WordPress.com</span> </span> <div class="idc-columns" style="padding-top: 20px;"> <div class="idc-divide"> <label for="IDtxtWPLoginEmail">Username or Email:</label> </div> <div class="idc-divide"> <label for="IDtxtWPLoginPass">Password:</label> </div> <span class="idc-clear"></span> </div> <div class="idc-divide"> <input id="IDtxtWPLoginEmail" name="txtLoginEmail" value="" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);" type="text"> </div> <div class="idc-divide"> <input id="IDtxtWPLoginPass" name="txtLoginPass" class="idc-text idc-password" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);" type="password"> <p class="idc-fade" <a="" href="http://wordpress.com/wp-login.php?action=lostpassword" target="_new">Lost your password?</p> </div> <div class="idc-head_b"> <div class="idc-tools"> <input type="hidden" name="IDtxtWPIDSiteID" value="219851"> <a class="idc-btn_l-secondary" href="javascript: hideLoginSignup();"><span></span><span class="idc-r">Cancel</span></a> <a href="javascript: IDC.$('IDfrmHeaderWPLogin').submit()" class="idc-btn_l"><span></span><span class="idc-r"><strong>Login</strong></span></a> </div> </div> </form> </div> <div class="idc-head_action idc-openid" id="IDLoginOpenIDPopup"> <a href="javascript: hideLoginSignup();" class="idc-close"><span>Close</span></a> <p><strong>Login with your OpenID</strong></p> <p>Or <a href="http://intensedebate.com/openIDSignup" target="_blank">create an account using OpenID</a></p> <div class="idc-divide"> <form action="http://intensedebate.com/loginOpenID" method="post" id="frmHeadLoginOpenID"> <label for="txtHeadLoginOpenID">OpenID URL:</label> <input id="txtHeadLoginOpenID" name="openid" value="http://" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;, false);" type="text"> <input style="display: none;" name="returnAddress" value="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/" type="hidden" id="IDReturnAddress"> </form> </div> <div class="idc-head_b"> <a class="idc-useopenid" href="javascript: showLogin();">Back</a> <div class="idc-tools"> <a class="idc-btn_l-secondary" href="javascript: hideLoginSignup();"><span></span><span class="idc-r">Cancel</span></a> <a class="idc-btn_l" href="javascript: if(document.getElementById('txtHeadLoginOpenID').value.length>7) document.getElementById('frmHeadLoginOpenID').submit(); else showMsgBox('Invalid OpenID url.', '<p>Please put in your OpenID URL and try to login again!</p>', 0, this);"><span></span><span class="idc-r"><strong>Login</strong></span></a> </div> </div> </div> <div class="idc-head_action idc-user"> <div class="idc-right"> <a class="snap_noshots" href="http://intensedebate.com/userDash">Dashboard</a> <span class="idc-divider"><span>|</span></span> <a class="snap_noshots" href="http://intensedebate.com/editprofile">Edit profile</a> <span class="idc-divider"><span>|</span></span> <a class="snap_noshots" href="http://intensedebate.com/logout">Logout</a> </div> <div> <a id="IDCommentUserBarLink1" href="http://intensedebate.com/people/0" class="idc-a snap_noshots"></a> </div> <ul class="idc-user_i"> <li>Logged in as <a id="IDCommentUserBarLink2" class="snap_noshots" href="http://intensedebate.com/people/0"></a></li> </ul> <div class="idc-user_admin" id="idc-user_admin" style="display:none;"> <p><a href="javascript:showHideOpts();" id="IDAdminOptsLink" class="idc-collapselink_closed snap_noshots">Admin Options</a></p> <div id="showHideAdminOpts" style="display:none;"> <p> <input type="hidden" id="IDUserAdminVal" value="1"> <span onclick="javascript: changeDisabledLink();"><label for="chkDisableIDC" class="idc-nofloat"><input type="checkbox" id="chkDisableIDC"> Disable comments for this page</label></span> </p><p><a id="adminOptions" class="idc-btn_s snap_noshots"><span></span><span class="idc-r" id="IDCSavedSettings">Save Settings</span></a></p> <p></p> </div> </div> </div> <div class="idc-toolbar" id="idc-toolbar"> <div id="idc-sortLinks"> <p>Sort by: <a id="IDSortLink1" href="javascript: sortComments(1);" class="idc-sel">Date</a> <a id="IDSortLink0" href="javascript: sortComments(0);">Rating</a> <a id="IDSortLink2" href="javascript: sortComments(2);">Last Activity</a></p> </div> <div id="idc-sortLinksLoading" style="display:none"> Loading comments... </div> </div><span class="idc-clear"></span><div class="idc-message" id="commentMessage" style="display:none;"></div></div><div id="idc-cover" class="idc-comments"><div class="idc-thread" id="IDTrackback22700732"> <div class="idc-tb"> <p class="idc-tb-title"><a href="http://hackaday.com/2012/01/10/using-a-touch-screen-with-an-stm32-microcontroller/">Using a touch screen with an STM32 microcontroller - Hack a Day</a></p> <div class="idc-tb-t"> [...] to drive a couple of different full color graphic LCD screens. His latest installment shows how to read from the touch screen included with both [...] </div> <div class="idc-tb-b"> <div class="idc-right" id="IDTrackBackDeleteLink22700732"> </div> <span class="idc-clear"></span> </div> </div></div><div class="idc-thread" id="IDTrackback22701789"> <div class="idc-tb"> <p class="idc-tb-title"><a href="http://ro-stire.ro/?p=96689">Using a touch screen with an STM32 microcontroller | ro-Stire</a></p> <div class="idc-tb-t"> [...] to drive a couple of different full color graphic LCD screens. His latest installment shows how to read from the touch screen included with both [...] </div> <div class="idc-tb-b"> <div class="idc-right" id="IDTrackBackDeleteLink22701789"> </div> <span class="idc-clear"></span> </div> </div></div><div class="idc-thread" id="IDTrackback22703557"> <div class="idc-tb"> <p class="idc-tb-title"><a href="http://gekogeek.com/hacks/using-a-touch-screen-with-an-stm32-microcontroller/">Using a touch screen with an STM32 microcontroller Â» Geko Geek</a></p> <div class="idc-tb-t"> [...] to drive a couple of different full color graphic LCD screens. His latest installment shows how to read from the touch screen included with both [...] </div> <div class="idc-tb-b"> <div class="idc-right" id="IDTrackBackDeleteLink22703557"> </div> <span class="idc-clear"></span> </div> </div></div><div class="idc-thread" id="IDTrackback22720272"> <div class="idc-tb"> <p class="idc-tb-title"><a href="http://cisforcomputers.com/?p=6898">Using a touch screen with an STM32 microcontroller | CisforComputers</a></p> <div class="idc-tb-t"> [...] to drive a couple of different full color graphic LCD screens. His latest installment shows how to read from the touch screen included with both [...] </div> <div class="idc-tb-b"> <div class="idc-right" id="IDTrackBackDeleteLink22720272"> </div> <span class="idc-clear"></span> </div> </div></div><div class="idc-thread" id="IDTrackback22740864"> <div class="idc-tb"> <p class="idc-tb-title"><a href="http://waxnsuds.com/2012/01/11/using-a-touch-screen-with-an-stm32-microcontroller/">Using a touch screen with an STM32 microcontroller Â« Uncategorized Â« Cool Internet Projects</a></p> <div class="idc-tb-t"> [...] to drive a couple of different full color graphic LCD screens. His latest installment shows how to read from the touch screen included with both [...] </div> <div class="idc-tb-b"> <div class="idc-right" id="IDTrackBackDeleteLink22740864"> </div> <span class="idc-clear"></span> </div> </div></div></div>	<div id="IDCommentsNewThreadCover" class="idc-new"> <a name="respond"></a> <h3>Post a new comment</h3> <div class="idc-thread" id="IDCThread"> <div style="width: 100%;" id="IDCommentsNewThread" class="idc-c idc-reply idc-anonymous idc-signup"> <div class="idc-c-h" id="IDCommentsNewThreadHeader" style="display: none;"> <div class="idc-right" id="IDCommentsNewThreadHeaderRight"> <div class="idc-expand"></div> </div> </div> <ul class="idc-c-plugins" id="idc-plugin-buttons-new-thread"></ul> <div class="idc-c-t"> <form id="IDCommentNewThreadForm1"> <div class="idc-c-t-inner"> <textarea class="idc-text_noresize" style="color: rgb(204, 204, 204); width: 499px; " id="IDCommentNewThreadText" onfocus="txtOnFocus(this, &#39;Enter text right here!&#39;);" onblur="txtOnBlur(this, &#39;Enter text right here!&#39;);">Enter text right here!</textarea> <span class="idc-clear"> </span></div> </form> </div> <div class="idc-postnav" id="IDCPostNav"> <p id="IDCNavGuest2" style="display: inline;" class="idc-postnav-label"><span>Comment as a Guest, or login:</span></p> <ul class="idc-postnav-list" id="IDCNavList"> <li class="idc-first"><a href="javascript: showLogin();" class="idc-loginbtn_intensedebate">Login to IntenseDebate</a></li> <li class="idc-first"><a href="javascript: showWPLogin();" class="idc-loginbtn_wordpress">Login to WordPress.com</a></li> <li><a href="javascript: IDC.twitter.load_popup();" class="idc-loginbtn_twitter">Login to Twitter</a></li> <li><a href="javascript: IDCNav('IDCNavOpenID'); showSignupOpenIDNewThread();" id="IDCNavOpenID" class="idc-loginbtn_openid">Login to OpenID</a></li> </ul> <a href="javascript: IDCNavReply('IDCNavGuest'); showSignupNewThread(); id_fbStopPoll(); id_show_nav();" id="IDCNavGuest" style="display:none;margin:2px 0;line-height:21px;">Go back</a> </div> <div class="idc-c-m idc-twitter_loggedin"> <div class="idc-userbar"> <p class="idc-right"><label for="IDNewThreadTweetThis-tw" style="display:inline; line-height:28px;" class="idc-nofloat"><input type="checkbox" id="IDNewThreadTweetThis-tw"> Tweet this comment</label></p> <a class="idc-a_nomenu"><img id="id_twAvatar_NewThread" src="" class="idc-avatar" width="26" height="26"><img id="id_twAvatar_NewThread-fav" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/twitter-favicon.ico" style="margin: 13px 0 -1px -5px; width: 16px; height: 16px;" width="16" height="16" alt="Twitter"></a> <p class="idc-userbar-i"> Connected as <a href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/#" id="id_twName_NewThread" class="snap_noshots"></a> (<a href="http://intensedebate.com/twitter-logout.php" class="snap_noshots">Logout</a>) </p> </div> <div class="idc-column-wide"> <label for="txtEmailNewThreadTW">Email (optional)</label> <input type="text" id="txtEmailNewThreadTW" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);"> <p></p> <p class="idc-form-info">Not displayed publicly.</p> </div> </div> <div class="idc-c-m idc-signup"> <form id="IDCommentNewThreadForm2"> <div style="width: 100%;"> <div class="idc-columns"> <div class="idc-column" id="IDCColumnNameLabel"> <label for="txtNameNewThread">Name</label> </div> <div class="idc-column" id="IDCColumnEmailLabel"> <label for="txtEmailNewThread">Email</label> </div> <div class="idc-column" id="IDCColumnURLLabel"> <label for="txtURLNewThread">Website (optional)</label> </div> <span class="idc-clear"></span> </div> <div class="idc-column" id="IDCColumnName"> <input type="text" id="txtNameNewThread" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);"> <p class="idc-form-info">Displayed next to your comments.</p> </div> <div class="idc-column" id="IDCColumnEmailReply"> <input type="text" id="txtEmailNewThread" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);"> <p class="idc-form-info">Not displayed publicly.</p> </div> <div class="idc-column" id="IDCColumnURL"> <input type="text" class="idc-text" id="txtURLNewThread" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);"> <p class="idc-form-info">If you have a website, link to it here.</p> </div> </div> </form> </div> <div class="idc-c-m idc-openid_signup"> <div style="width: 100%;"> <form id="IDCommentsOpenIDSignupNewThread" action="http://intensedebate.com/openIDComments.php" method="get"> <input id="IDCommentsOpenIDSignupNewThreadComment" style="display: none;" name="comment" type="hidden"> <input id="IDCommentsOpenIDSignupNewThreadParentid" style="display: none;" name="parentid" type="hidden"> <input id="IDCommentsOpenIDSignupNewThreadType" style="display: none;" name="type" value="4" type="hidden"> <input id="IDCommentsOpenIDSignupNewThreadSrc" style="display: none;" name="src" value="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/" type="hidden"> <input id="IDCommentsOpenIDSignupNewThreadBlogpostid" style="display: none;" name="blogpostid" value="118399826" type="hidden"> <div class="idc-column-wide"> <label for="txtOpenIDSignupNewThreadURL">OpenID URL</label> <input id="txtOpenIDSignupNewThreadURL" name="openid" class="idc-text" value="http://" onfocus="txtOnFocus(this, &#39;&#39;, false);" onblur="txtOnBlur(this, &#39;&#39;, false);" type="text"> <p class="idc-form-info">Comment as a Guest or <a href="javascript:showLoginOpenID();">login</a> using OpenID</p> </div> </form> </div> </div> <p id="IDCommentsNewThreadListItem1" style="display:none;">Posting anonymously.</p> <p id="IDNewThreadTweetThisWrapper" style="display:none"><label for="IDNewThreadTweetThis" class="idc-nofloat"><input type="checkbox" id="IDNewThreadTweetThis"> Tweet this comment</label></p> <div class="idc-c-b"> <div class="idc-right" id="IDNewThreadSubmitLI"> <a class="idc-btn_l" href="javascript: postComment(0);"><span></span><span class="idc-r"><strong>Submit Comment</strong></span></a> </div> <div class="idc-new_subscribe" id="IDSubscribeToThisWrapper"> <!--<input type="checkbox" id="IDSubscribeToThis" class="idc-chk" />--> <label for="IDSubscribeToThis" class="idc-nofloat"> Subscribe to <select id="IDSubscribeToThis" name="IDSubscribeToThis"> <option value="-1" id="IDSubscribeToThis-def">None</option> <option value="1" id="IDSubscribeToThis-replies">Replies</option> <option value="0">All new comments</option> </select> </label> </div> <div class="idc-customtext"> <span id="customText"></span> </div> <span class="idc-clear"></span> </div> </div> </div> </div> <div class="idc-foot"> <p class="idc-id"><span>Comments by </span><a href="http://intensedebate.com/" class="idc-idlogo" target="_blank">IntenseDebate</a></p> <span class="idc-clear"></span> </div><div id="divReplyExpandingText" class="idc-measure"></div><div id="divNewPostExpandingText" class="idc-measure"></div><div style="display: none; " class="idc-c idc-reply idc-anonymous idc-signup" id="IDCommentReplyDiv"><p class="idc-header" id="IDCommentReplyName"></p> <ul class="idc-c-plugins" id="idc-plugin-buttons-reply"></ul> <div class="idc-c-t"> <div class="idc-c-t-inner"> <form id="IDCommentReplyForm1"> <textarea id="txtComment" class="idc-text_noresize" onfocus="txtOnFocus(this, &#39;Enter text right here!&#39;);" onblur="txtOnBlur(this, &#39;Enter text right here!&#39;);">Enter text right here!</textarea> </form> <span class="idc-clear"> </span></div> </div> <div class="idc-postnav" id="IDCPostNavReply"> <p id="IDCNavGuestReply2" style="display: inline;" class="idc-postnav-label"><span>Reply as a Guest, or login:</span></p> <ul class="idc-postnav-list" id="IDCNavListReply"> <li class="idc-first"><a href="javascript: showLogin();" class="idc-loginbtn_intensedebate">Login to IntenseDebate</a></li> <li class="idc-first"><a href="javascript: showWPLogin();" class="idc-loginbtn_wordpress">Login to WordPress.com</a></li> <li><a href="javascript: IDC.twitter.load_popup();" class="idc-loginbtn_twitter">Login to Twitter</a></li> <li><a href="javascript: IDCNavReply('IDCNavOpenIDReply'); showSignupOpenIDReply();" id="IDCNavOpenIDReply" class="idc-loginbtn_openid">Login to OpenID</a></li> </ul> <a href="javascript: IDCNavReply('IDCNavGuestReply'); showSignupReply(); id_fbStopPoll(); id_show_nav();" id="IDCNavGuestReply" style="display:none;margin:2px 0;line-height:21px;">Go back</a> </div> <div class="idc-c-m idc-twitter_loggedin"> <div class="idc-userbar"> <p class="idc-right"><label for="IDReplyTweetThis-tw" style="display:inline; line-height: 28px;" class="idc-nofloat"><input type="checkbox" id="IDReplyTweetThis-tw"> Tweet this comment</label></p> <a class="idc-a_nomenu"><img id="id_twAvatar_Reply" src="" class="idc-avatar" width="26" height="26"><img id="id_twAvatar_Reply-fav" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/twitter-favicon.ico" style="margin: 13px 0 -1px -5px; width: 16px; height: 16px;" width="16" height="16" alt="Twitter"></a> <p class="idc-userbar-i">Connected as <a href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/#" class="snap_noshots" id="id_twName_Reply"></a> (<a href="http://intensedebate.com/twitter-logout.php" class="snap_noshots">Logout</a>)</p> </div> <div class="idc-column-wide"> <label for="txtEmailReplyTW">Email (optional)</label> <input type="text" id="txtEmailReplyTW" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);"> <p class="idc-form-info">Not displayed publicly.</p> </div> </div> <div class="idc-c-m idc-signup" id="IDCommentReplyOuterDiv"> <form id="IDCommentReplyForm2"> <div style="width: 100%;" id="IDCommentReplyInnerDiv"> <div class="idc-columns"> <div class="idc-column" id="IDCColumnNameReplyLabel"> <label for="txtNameReply">Name</label> </div> <div class="idc-column" id="IDCColumnEmailReplyLabel"> <label for="txtEmailReply">Email</label> </div> <div class="idc-column" id="IDCColumnURLReplyLabel"> <label for="txtURLReply">Website (optional)</label> </div> <span class="idc-clear"></span> </div> <div class="idc-column" id="IDCColumnNameReply"> <input type="text" id="txtNameReply" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);"> <p class="idc-form-info">Displayed next to your comments.</p> </div> <div class="idc-column" id="IDCColumnEmailReply"> <input type="text" id="txtEmailReply" class="idc-text" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);"> <p class="idc-form-info">Not displayed publicly.</p> </div> <div class="idc-column" id="IDCColumnURLReply"> <input type="text" class="idc-text" id="txtURLReply" onfocus="txtOnFocus(this, &#39;&#39;);" onblur="txtOnBlur(this, &#39;&#39;);"> <p class="idc-form-info">If you have a website, link to it here.</p> </div> </div> </form> </div> <div class="idc-c-m idc-openid_signup"> <div id="IDCommentsOpenIDReplyInnerDiv"> <form id="IDCommentsOpenIDSignupReply" action="http://intensedebate.com/openIDComments.php" method="get"> <input id="IDCommentsOpenIDSignupReplyComment" style="display: none;" name="comment" type="hidden"> <input id="IDCommentsOpenIDSignupReplyParentid" style="display: none;" name="parentid" type="hidden"> <input id="IDCommentsOpenIDSignupReplyType" style="display: none;" name="type" value="4" type="hidden"> <input id="IDCommentsOpenIDSignupReplySrc" style="display: none;" name="src" value="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/" type="hidden"> <input id="IDCommentsOpenIDSignupReplyBlogpostid" style="display: none;" name="blogpostid" value="118399826" type="hidden"> <div class="idc-column-wide"> <label for="txtOpenIDSignupReplyURL">OpenID URL</label> <input id="txtOpenIDSignupReplyURL" name="openid" class="idc-text" value="http://" onfocus="txtOnFocus(this, &#39;http://&#39;, false);" onblur="txtOnBlur(this, &#39;http://&#39;);" type="text"> <p class="idc-form-info">Comment as a Guest or <a href="javascript:showLoginOpenID();">login</a> using OpenID</p> </div> </form> </div> </div> <p id="IDCommentReplyListItem1" style="display:none;">Posting anonymously.</p> <p id="IDReplyTweetThisWrapper" style="display:none"><label for="IDReplyTweetThis" class="idc-nofloat"><input type="checkbox" id="IDReplyTweetThis"> Tweet this comment</label></p> <div class="idc-c-b"> <div class="idc-right" id="IDReplyDivSubmitLI"> <a href="javascript: hideReply();" class="idc-btn_l-secondary"><span></span><span class="idc-r">Cancel</span></a> <a id="IDReplyDivSubmitLIButton" class="idc-btn_l" href="javascript: postComment(1);"><span></span><span class="idc-r"><strong>Submit Comment</strong></span></a> </div> <div class="idc-new_subscribe" id="IDSubscribeToThisWrapperReply"> <!--<input type="checkbox" id="IDSubscribeToThisReply" class="idc-chk" />--> <label for="IDSubscribeToThisReply" class="idc-nofloat"> Subscribe to <select id="IDSubscribeToThisReply" name="IDSubscribeToThisReply"> <option value="-1" id="IDSubscribeToThisReply-def">None</option> <option value="1" id="IDSubscribeToThisReply-replies">Replies</option> <option value="0">All new comments</option> </select> </label> </div> <span class="idc-clear"></span> </div></div><iframe src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/empty.htm" style="display: none; "></iframe><img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/remoteCheckin.php" style="display: none; "></div><span id="idc-clear"></span></div>
          </div>
        </div>
        <div class="entry-bottom-top"></div>
        <div class="entry-bottom"></div>
      </div>
    </div>

	<div id="idc-loading-comments" style="vertical-align: middle; display: none; "><img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/loading.gif" alt="Loading" border="0" align="absmiddle"> Loading IntenseDebate Comments...</div><div id="idc-noscript" style="display: none; ">
		
	<div class="entry post clearfix">
		<div class="entry-content">
			<div class="entry comment-icon">
				<div class="entry-top"></div>
					<div class="post clearfix">
						<div class="content clearfix">
							<span class="bubble"></span>
		
							<div id="comment-section" class="nocomments">
											<!-- If comments are open, but there are no comments. -->
						
									</div>
			
			
				<div id="respond">
				
					<h3 id="comments"><cufon class="cufon cufon-canvas" alt="Leave " style="width: 70px; height: 40px; "><canvas width="97" height="48" style="width: 97px; height: 48px; top: -8px; left: -1px; "></canvas><cufontext>Leave </cufontext></cufon><cufon class="cufon cufon-canvas" alt="a " style="width: 20px; height: 40px; "><canvas width="48" height="48" style="width: 48px; height: 48px; top: -8px; left: -1px; "></canvas><cufontext>a </cufontext></cufon><cufon class="cufon cufon-canvas" alt="Reply" style="width: 61px; height: 40px; "><canvas width="83" height="48" style="width: 83px; height: 48px; top: -8px; left: -1px; "></canvas><cufontext>Reply</cufontext></cufon></h3>
					<div class="cancel-comment-reply"> <small>
						<a rel="nofollow" id="cancel-comment-reply-link" href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/#respond" style="display:none;">Click here to cancel reply.</a>						</small> </div> <!-- end cancel-comment-reply div -->
					
											<form action="http://andybrown.me.uk/ws/wp-comments-post.php" method="post" id="commentform">
													<p>
								<input type="text" name="author" id="author" value="" size="22" tabindex="1" aria-required="true">
								<label for="author"><small>Name									(required)									</small></label>
							</p>
							<p>
								<input type="text" name="email" id="email" value="" size="22" tabindex="2" aria-required="true">
								<label for="email"><small>Mail (will not be published)									(required)									</small></label>
							</p>
							<p>
								<input type="text" name="url" id="url" value="" size="22" tabindex="3">
								<label for="url"><small>Website</small></label>
							</p>
												<!--<p><small><strong>XHTML:</strong> You can use these tags: <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></small></p>-->
						<p>
							<textarea name="comment" id="comment" cols="100%" rows="10" tabindex="4"></textarea>
						</p>
						<p>
							<input name="submit" type="submit" id="submit" tabindex="5" value="Submit Comment">
							<input type="hidden" name="comment_post_ID" value="1312" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="a71c0ba624"></p>						</form>
										
				</div> <!-- end respond div -->
				
					
		</div>
		</div>
		</div>
		
		</div> <!-- end .entry-content -->
					
	</div> <!-- end .entry -->
	</div>
	<script type="text/javascript">
	/* <![CDATA[ */
	var idc_xd_receiver = '/ws/wp-content/plugins/intensedebate/xd_receiver.htm';
	function IDC_revert() { document.getElementById('idc-loading-comments').style.display='none'; if ( !document.getElementById('IDCommentsHead') ) { document.getElementById('idc-noscript').style.display='block'; document.getElementById('idc-comment-wrap-js').parentNode.removeChild(document.getElementById('idc-comment-wrap-js')); } else { document.getElementById('idc-noscript').style.display='none'; } }
	idc_ns = document.getElementById('idc-noscript');
	idc_ns.style.display='none'; idc_ld = document.createElement('div');
	idc_ld.id = 'idc-loading-comments'; idc_ld.style.verticalAlign='middle';
	idc_ld.innerHTML = "<img src='http://andybrown.me.uk/ws/wp-content/plugins/intensedebate/loading.gif' alt='Loading' border='0' align='absmiddle' /> Loading IntenseDebate Comments...";
	idc_ns.parentNode.insertBefore(idc_ld, idc_ns);
	setTimeout( IDC_revert, 10000 );
	/* ]]> */
	</script>
		<script type="text/javascript">
		/* <![CDATA[ */
		var s = document.createElement("script"); s.type = "text/javascript"; s.id = 'idc-comment-wrap-js'; s.src = "http://intensedebate.com/js/wordpressTemplateCommentWrapper2.php?acct=aaf1cae00dfb32925a65eb7491e0af6e&postid=1312&title=stm32plus%3A+ADS7843+touch+screen+driver&url=http%3A%2F%2Fandybrown.me.uk%2Fws%2F2012%2F01%2F07%2Fstm32plus-ads7843-touch-screen-driver%2F&posttime=2012-01-07+17%3A04%3A04&postauthor=Andy&guid=http%3A%2F%2Fandybrown.me.uk%2Fws%2F%3Fp%3D1312"; document.getElementsByTagName("head")[0].appendChild(s);
		/* ]]> */
		</script>
		
	</div> <!-- end #main-area -->
		
	<div id="sidebar">				
	<div class="widget search">
	<form action="http://andybrown.me.uk/ws" id="searchform1" method="get">
		<input type="text" id="searchinput" name="s" value="search this site...">
		
						<input type="image" id="searchsubmit" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/search_btn.png">
	</form>
</div> <!-- end .widget -->
<div id="linkcat-2" class="widget widget_links"><h3 class="title"><cufon class="cufon cufon-canvas" alt="Links" style="width: 49px; height: 30px; "><canvas width="65" height="37" style="width: 65px; height: 37px; top: -7px; left: -2px; "></canvas><cufontext>Links</cufontext></cufon></h3><div class="widget-content">
	<ul class="xoxo blogroll">
<li><a href="https://twitter.com/#!/andyworkshop" rel="me" title="#andyworkshop" target="_blank">Follow me on Twitter</a></li>
<li><a href="http://www.foxbat.me.uk/" rel="me" title="Visit my nature photography site. Itâs really cool. Honestly!">foxbat:Photography</a></li>
<li><a href="http://andybrown.me.uk/ws/comments/feed" title="Subscribe to comments posted on my blog">Subscribe to comments</a></li>
<li><a href="http://andybrown.me.uk/ws/feed" title="Subscribe to posts that I make on this blog">Subscribe to posts</a></li>

	</ul>
</div> <!-- end .widget-content --> </div> <!-- end .widget -->
<div id="categories-3" class="widget widget_categories"><h3 class="title"><cufon class="cufon cufon-canvas" alt="Categories" style="width: 99px; height: 30px; "><canvas width="115" height="37" style="width: 115px; height: 37px; top: -7px; left: -2px; "></canvas><cufontext>Categories</cufontext></cufon></h3><div class="widget-content">		<ul>
	<li class="cat-item cat-item-71"><a href="http://andybrown.me.uk/ws/category/hardware-projects/arduino-512k-sram/" title="View all posts filed under Arduino 512K SRAM">Arduino 512K SRAM</a>
</li>
	<li class="cat-item cat-item-9"><a href="http://andybrown.me.uk/ws/category/avrprogenv/arduino-specific/" title="Tips and tricks for programming the Arduino AVR implementation">Arduino specific</a>
</li>
	<li class="cat-item cat-item-10"><a href="http://andybrown.me.uk/ws/category/avrprogenv/attiny/" title="Tips and tricks for programming the ATtiny range of microcontrollers.">ATtiny</a>
</li>
	<li class="cat-item cat-item-3"><a href="http://andybrown.me.uk/ws/category/avrprogenv/" title="Tips for setting up a Windows programming environment for AVR development.">AVR programming</a>
</li>
	<li class="cat-item cat-item-64"><a href="http://andybrown.me.uk/ws/category/avrprogenv/eclipse-avrprogenv/" title="Setting up and using the popular Eclipse IDE">Eclipse</a>
</li>
	<li class="cat-item cat-item-44"><a href="http://andybrown.me.uk/ws/category/hardware-projects/" title="View all posts filed under Hardware projects">Hardware projects</a>
</li>
	<li class="cat-item cat-item-63"><a href="http://andybrown.me.uk/ws/category/hardware-projects/phototrap-hardware-projects/" title="Designing and building a multi-sensor phototrap for Canon cameras.">Phototrap</a>
</li>
	<li class="cat-item cat-item-68"><a href="http://andybrown.me.uk/ws/category/stm32-2/" title="View all posts filed under STM32">STM32</a>
</li>
	<li class="cat-item cat-item-72"><a href="http://andybrown.me.uk/ws/category/stm32-2/stm32plus/" title="View all posts filed under stm32plus">stm32plus</a>
</li>
		</ul>
</div> <!-- end .widget-content --> </div> <!-- end .widget -->		<div id="recent-posts-3" class="widget widget_recent_entries">		<h3 class="title"><cufon class="cufon cufon-canvas" alt="Recent " style="width: 67px; height: 30px; "><canvas width="89" height="37" style="width: 89px; height: 37px; top: -7px; left: -2px; "></canvas><cufontext>Recent </cufontext></cufon><cufon class="cufon cufon-canvas" alt="Posts" style="width: 52px; height: 30px; "><canvas width="68" height="37" style="width: 68px; height: 37px; top: -7px; left: -2px; "></canvas><cufontext>Posts</cufontext></cufon></h3><div class="widget-content">		<ul>
				<li><a href="http://andybrown.me.uk/ws/2012/05/07/level-converter/" title="16 channel level converter with dual regulators">16 channel level converter with dual regulators</a></li>
				<li><a href="http://andybrown.me.uk/ws/2012/04/28/avr-gcc-4-7-0-and-avr-libc-1-8-0-compiled-for-windows/" title="avr-gcc 4.7.0 and avr-libc 1.8.0 compiled for Windows">avr-gcc 4.7.0 and avr-libc 1.8.0 compiled for Windows</a></li>
				<li><a href="http://andybrown.me.uk/ws/2012/04/09/stm32plus-ili9481-tft-driver/" title="stm32plus: ILI9481 TFT driver">stm32plus: ILI9481 TFT driver</a></li>
				<li><a href="http://andybrown.me.uk/ws/2012/03/31/stm32f4discovery/" title="stm32f4discovery: Up and running with the ARM Cortex M4">stm32f4discovery: Up and running with the ARM Cortex M4</a></li>
				<li><a href="http://andybrown.me.uk/ws/2012/03/24/stm32plus-fat32-fat16-drivers/" title="stm32plus: FAT32 &amp; FAT16 drivers">stm32plus: FAT32 &amp; FAT16 drivers</a></li>
				<li><a href="http://andybrown.me.uk/ws/2012/03/06/reverse-engineering-the-nokia-2730-qvga-lcd/" title="Reverse engineering the Nokia 2730 QVGA LCD">Reverse engineering the Nokia 2730 QVGA LCD</a></li>
				<li><a href="http://andybrown.me.uk/ws/2012/02/19/photoframe/" title="stm32plus: A full photoframe application">stm32plus: A full photoframe application</a></li>
				<li><a href="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/stm32plus  ADS7843 touch screen driver   Andy's Workshop.htm" title="stm32plus: ADS7843 touch screen driver">stm32plus: ADS7843 touch screen driver</a></li>
				<li><a href="http://andybrown.me.uk/ws/2012/01/01/stm32plus-ili9325-tft-driver/" title="stm32plus: ILI9325 TFT driver">stm32plus: ILI9325 TFT driver</a></li>
				<li><a href="http://andybrown.me.uk/ws/2011/12/28/stm32plus-hx8347a-tft-driver/" title="stm32plus: HX8347A TFT driver">stm32plus: HX8347A TFT driver</a></li>
				</ul>
		</div> <!-- end .widget-content --> </div> <!-- end .widget --><div id="tag_cloud-3" class="widget widget_tag_cloud"><h3 class="title"><cufon class="cufon cufon-canvas" alt="Tags" style="width: 42px; height: 30px; "><canvas width="58" height="37" style="width: 58px; height: 37px; top: -7px; left: -2px; "></canvas><cufontext>Tags</cufontext></cufon></h3><div class="widget-content"><div class="tagcloud"><a href="http://andybrown.me.uk/ws/tag/64-bit/" class="tag-link-37" title="1 topic" style="font-size: 8pt;">64 bit</a>
<a href="http://andybrown.me.uk/ws/tag/animation/" class="tag-link-48" title="1 topic" style="font-size: 8pt;">animation</a>
<a href="http://andybrown.me.uk/ws/tag/arduino/" class="tag-link-19" title="14 topics" style="font-size: 21.247311828pt;">arduino</a>
<a href="http://andybrown.me.uk/ws/tag/arm/" class="tag-link-66" title="2 topics" style="font-size: 10.7096774194pt;">arm</a>
<a href="http://andybrown.me.uk/ws/tag/atmega/" class="tag-link-32" title="7 topics" style="font-size: 17.0322580645pt;">atmega</a>
<a href="http://andybrown.me.uk/ws/tag/atmega1280/" class="tag-link-28" title="2 topics" style="font-size: 10.7096774194pt;">atmega1280</a>
<a href="http://andybrown.me.uk/ws/tag/atmega2560/" class="tag-link-29" title="1 topic" style="font-size: 8pt;">atmega2560</a>
<a href="http://andybrown.me.uk/ws/tag/atmel/" class="tag-link-18" title="14 topics" style="font-size: 21.247311828pt;">atmel</a>
<a href="http://andybrown.me.uk/ws/tag/attiny-2/" class="tag-link-11" title="3 topics" style="font-size: 12.5161290323pt;">attiny</a>
<a href="http://andybrown.me.uk/ws/tag/attiny25/" class="tag-link-14" title="2 topics" style="font-size: 10.7096774194pt;">attiny25</a>
<a href="http://andybrown.me.uk/ws/tag/attiny45/" class="tag-link-13" title="1 topic" style="font-size: 8pt;">attiny45</a>
<a href="http://andybrown.me.uk/ws/tag/attiny85/" class="tag-link-12" title="2 topics" style="font-size: 10.7096774194pt;">attiny85</a>
<a href="http://andybrown.me.uk/ws/tag/auto-repeat/" class="tag-link-43" title="1 topic" style="font-size: 8pt;">auto-repeat</a>
<a href="http://andybrown.me.uk/ws/tag/avr/" class="tag-link-17" title="13 topics" style="font-size: 20.7956989247pt;">avr</a>
<a href="http://andybrown.me.uk/ws/tag/avr-gcc/" class="tag-link-22" title="9 topics" style="font-size: 18.5376344086pt;">avr-gcc</a>
<a href="http://andybrown.me.uk/ws/tag/avrgcc/" class="tag-link-21" title="7 topics" style="font-size: 17.0322580645pt;">avrgcc</a>
<a href="http://andybrown.me.uk/ws/tag/backlight/" class="tag-link-45" title="1 topic" style="font-size: 8pt;">backlight</a>
<a href="http://andybrown.me.uk/ws/tag/bug/" class="tag-link-25" title="1 topic" style="font-size: 8pt;">bug</a>
<a href="http://andybrown.me.uk/ws/tag/button/" class="tag-link-40" title="1 topic" style="font-size: 8pt;">button</a>
<a href="http://andybrown.me.uk/ws/tag/compiler/" class="tag-link-24" title="7 topics" style="font-size: 17.0322580645pt;">compiler</a>
<a href="http://andybrown.me.uk/ws/tag/constructor/" class="tag-link-27" title="1 topic" style="font-size: 8pt;">constructor</a>
<a href="http://andybrown.me.uk/ws/tag/contrast/" class="tag-link-46" title="1 topic" style="font-size: 8pt;">contrast</a>
<a href="http://andybrown.me.uk/ws/tag/cortex/" class="tag-link-67" title="2 topics" style="font-size: 10.7096774194pt;">cortex</a>
<a href="http://andybrown.me.uk/ws/tag/debounce/" class="tag-link-41" title="2 topics" style="font-size: 10.7096774194pt;">debounce</a>
<a href="http://andybrown.me.uk/ws/tag/drivers/" class="tag-link-39" title="1 topic" style="font-size: 8pt;">drivers</a>
<a href="http://andybrown.me.uk/ws/tag/easing/" class="tag-link-49" title="1 topic" style="font-size: 8pt;">easing</a>
<a href="http://andybrown.me.uk/ws/tag/eclipse/" class="tag-link-23" title="8 topics" style="font-size: 17.7849462366pt;">eclipse</a>
<a href="http://andybrown.me.uk/ws/tag/gcc/" class="tag-link-20" title="8 topics" style="font-size: 17.7849462366pt;">gcc</a>
<a href="http://andybrown.me.uk/ws/tag/isp/" class="tag-link-35" title="2 topics" style="font-size: 10.7096774194pt;">isp</a>
<a href="http://andybrown.me.uk/ws/tag/keyboard/" class="tag-link-42" title="1 topic" style="font-size: 8pt;">keyboard</a>
<a href="http://andybrown.me.uk/ws/tag/led/" class="tag-link-47" title="1 topic" style="font-size: 8pt;">led</a>
<a href="http://andybrown.me.uk/ws/tag/library/" class="tag-link-30" title="1 topic" style="font-size: 8pt;">library</a>
<a href="http://andybrown.me.uk/ws/tag/malloc/" class="tag-link-52" title="1 topic" style="font-size: 8pt;">malloc</a>
<a href="http://andybrown.me.uk/ws/tag/mcu/" class="tag-link-16" title="10 topics" style="font-size: 19.1397849462pt;">mcu</a>
<a href="http://andybrown.me.uk/ws/tag/microcontroller/" class="tag-link-15" title="16 topics" style="font-size: 22pt;">microcontroller</a>
<a href="http://andybrown.me.uk/ws/tag/optocoupler/" class="tag-link-51" title="1 topic" style="font-size: 8pt;">optocoupler</a>
<a href="http://andybrown.me.uk/ws/tag/phototrap/" class="tag-link-50" title="3 topics" style="font-size: 12.5161290323pt;">phototrap</a>
<a href="http://andybrown.me.uk/ws/tag/project/" class="tag-link-31" title="1 topic" style="font-size: 8pt;">project</a>
<a href="http://andybrown.me.uk/ws/tag/r20/" class="tag-link-26" title="1 topic" style="font-size: 8pt;">r20</a>
<a href="http://andybrown.me.uk/ws/tag/stm32/" class="tag-link-65" title="3 topics" style="font-size: 12.5161290323pt;">stm32</a>
<a href="http://andybrown.me.uk/ws/tag/tft/" class="tag-link-60" title="2 topics" style="font-size: 10.7096774194pt;">TFT</a>
<a href="http://andybrown.me.uk/ws/tag/usb/" class="tag-link-34" title="1 topic" style="font-size: 8pt;">usb</a>
<a href="http://andybrown.me.uk/ws/tag/usbasp/" class="tag-link-33" title="1 topic" style="font-size: 8pt;">usbasp</a>
<a href="http://andybrown.me.uk/ws/tag/windows/" class="tag-link-36" title="1 topic" style="font-size: 8pt;">windows</a>
<a href="http://andybrown.me.uk/ws/tag/x64/" class="tag-link-38" title="1 topic" style="font-size: 8pt;">x64</a></div>
</div> <!-- end .widget-content --> </div> <!-- end .widget --></div> <!-- end #sidebar -->			
		<script type="text/javascript">
		/* <![CDATA[ */
		var s = document.createElement("script"); s.type = "text/javascript"; s.src = "http://intensedebate.com/js/wordpressTemplateLinkWrapper2.php?acct=aaf1cae00dfb32925a65eb7491e0af6e"; document.getElementsByTagName("head")[0].appendChild(s);
		/* ]]> */
		</script>
		</div> <!-- end #content-area -->
		
		<div id="footer">
		</div> <!-- end #footer -->
	</div> <!-- end #container -->
	
	
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/superfish.js"></script>	
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/jquery.fancybox-1.2.6.pack.js"></script>
<script type="text/javascript">
	jQuery("a[class^='fancybox']").fancybox({
			'overlayOpacity'	:	0.7,
			'overlayColor'		:	'#000000',
			'zoomSpeedIn'		:	500,
			'zoomSpeedOut'		:	500
		});
</script>
<script type="text/javascript">
//<![CDATA[
	jQuery.noConflict();

	jQuery('ul.superfish').superfish({ 
		delay:       200,                            // one second delay on mouseout 
		animation:   {'marginLeft':'0px',opacity:'show'},  // fade-in and slide-down animation 
		speed:       'fast',                          // faster animation speed
		onBeforeShow: function(){ this.css('marginLeft','20px'); }, 			
		autoArrows:  true,                           // disable generation of arrow mark-up 
		dropShadows: false                            // disable drop shadows 
	}).find('> li > ul').prepend('<span class="top-arrow"></span>');
	
	var pagemenuwidth = jQuery("ul.nav").width();
	var pagemleft = Math.round((804 - pagemenuwidth) / 2) + 55;
	if (pagemenuwidth < 804) jQuery("ul.nav").css('padding-left',pagemleft);
	
	jQuery('ul.superfish ul a').hover(function(){
		jQuery(this).parent('li').stop().animate({paddingLeft:'27px'},300);
	},function(){
		jQuery(this).parent('li').stop().animate({paddingLeft:'17px'},300);
	});
	
	et_search_bar();
	
	jQuery('#sidebar ul li a').hover(function(){
		jQuery(this).stop().animate({paddingLeft:'38px',backgroundPosition:'21px 14px'},300);
	},function(){
		jQuery(this).stop().animate({paddingLeft:'26px',backgroundPosition:'11px 14px'},300);
	});
	
	jQuery('.share a.arrow').click(function(){
		if (jQuery.browser.msie) 
			jQuery(this).siblings('.buttons').animate({	opacity: 'toggle' }, 0, function() {
				var sharebox = jQuery(this).parent('.share-box');
				if (sharebox.hasClass('open')) sharebox.removeClass('open')
				else sharebox.addClass('open');
			});
		else 
			jQuery(this).siblings('.buttons').animate({	height: 'toggle' }, 700, function() {
				var sharebox = jQuery(this).parent('.share-box');
				if (sharebox.hasClass('open')) sharebox.removeClass('open')
				else sharebox.addClass('open');
			});

		return false;
	});
	
	jQuery('.share .buttons a').hover(function(){
		jQuery(this).find('.tooltip').animate({	opacity: 'show', left: '39px' }, 300);
	},function(){
		jQuery(this).find('.tooltip').animate({	opacity: 'hide', left: '49px' }, 300);
	});
	
	
	<!---- Search Bar Improvements ---->
	function et_search_bar(){
		var $searchform = jQuery('#searchform1'),
			$searchinput = $searchform.find("input#searchinput"),
			searchvalue = $searchinput.val();
			
		$searchinput.focus(function(){
			if (jQuery(this).val() === searchvalue) jQuery(this).val("");
		}).blur(function(){
			if (jQuery(this).val() === "") jQuery(this).val(searchvalue);
		});
	};

		
			Cufon.now();
		
//]]>	
</script>	<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/swfaddress.js"></script>
	<script type="text/javascript">
	/* <![CDATA[ */
	
	<!---- et_switcher plugin v2 ---->
	(function($)
	{
		$.fn.et_shortcodes_switcher = function(options)
		{
			var defaults =
			{
			   slides: '>div',
			   activeClass: 'active',
			   linksNav: '',
			   findParent: true, //use parent elements to define active states
			   lengthElement: 'li', //parent element, used only if findParent is set to true
			   useArrows: false,
			   arrowLeft: 'a#prev-arrow',
			   arrowRight: 'a#next-arrow',
			   auto: false,
			   autoSpeed: 5000,
			   slidePadding: '',
			   pauseOnHover: true,
			   fx: 'fade',
			   sliderType: ''
			};

			var options = $.extend(defaults, options);

			return this.each(function()
			{
								
				var slidesContainer = jQuery(this).parent().css('position','relative'),
					$slides = jQuery(this).css({'overflow':'hidden','position':'relative'}),
					$slide = $slides.find(options.slides).css({'opacity':'1','position':'absolute','top':'0px','left':'0px','display':'none'}),
					slidesNum = $slide.length,
					zIndex = slidesNum,
					currentPosition = 1,
					slideHeight = 0,
					$activeSlide,
					$nextSlide;
				
				if (options.fx === 'slide') {
					$slide.css({'opacity':'0','position':'absolute','top':'0px','left':'0px','display':'block'});
				} else {
					$slide.filter(':first').css({'display':'block'});
				}
				
				if (options.slidePadding != '') $slide.css('padding',options.slidePadding);
				
				$slide.each(function(){
					jQuery(this).css('z-index',zIndex).addClass('clearfix');
					if (options.fx === 'slide') zIndex--;
					
					slideH = jQuery(this).innerHeight();
					if (slideH > slideHeight) slideHeight = slideH;
				});
				$slides.css('height', slideHeight);
				$slides.css('width', $slides.width());
								
				var slideWidth = $slide.width(),
					slideOuterWidth = $slide.outerWidth();
				
				$slide.css('width',slideWidth);
				
				$slide.filter(':first').css('opacity','1');
				
				if (options.sliderType != '') {
					if (options.sliderType === 'images') {
						controllersHtml = '<div class="controllers-wrapper"><div class="controllers"><a href="#" class="left-arrow">Previous</a>';
						for ($i=1; $i<=slidesNum; $i++) {
							controllersHtml += '<a class="switch" href="#">'+$i+'</a>';
						}
						controllersHtml += '<a href="#" class="right-arrow">Next</a></div><div class="controllers-right"></div></div>';		
						$controllersWrap = jQuery(controllersHtml).prependTo($slides.parent());
					}
					
					var etimage_width = $slide.width();
		
					slidesContainer.css({'width':etimage_width});
					$slides.css({'width':etimage_width});
					
					if (options.sliderType === 'images') {
						slidesContainer.css({'height':$slide.height()});
						$slides.css({'height':$slide.height()});
						
						var controllers_width = $controllersWrap.width(),
						leftPosition = Math.round((etimage_width - controllers_width) / 2);
					
						$controllersWrap.css({left: leftPosition});
					}	
				}
				
				
				if (options.linksNav != '') {
					var linkSwitcher = jQuery(options.linksNav);
					
					var linkSwitcherTab = '';
					if (options.findParent) linkSwitcherTab = linkSwitcher.parent();
					else linkSwitcherTab = linkSwitcher;
					
					if (!linkSwitcherTab.filter('.active').length) linkSwitcherTab.filter(':first').addClass('active');
									
					linkSwitcher.click(function(){
						
						var targetElement;

						if (options.findParent) targetElement = jQuery(this).parent();
						else targetElement = jQuery(this);
						
						var orderNum = targetElement.prevAll(options.lengthElement).length+1;
						
						if (orderNum > currentPosition) gotoSlide(orderNum, 1);
						else gotoSlide(orderNum, -1); 
						
						return false;
					});
				}
				
				
				if (options.useArrows) {
					var $right_arrow = jQuery(options.arrowRight),
						$left_arrow = jQuery(options.arrowLeft);
										
					$right_arrow.click(function(){				
						if (currentPosition === slidesNum) 
							gotoSlide(1,1);
						else 
							gotoSlide(currentPosition+1),1;
						
						if (options.linksNav != '') changeTab();
												
						return false;
					});
					
					$left_arrow.click(function(){
						if (currentPosition === 1)
							gotoSlide(slidesNum,-1);
						else 
							gotoSlide(currentPosition-1,-1);
						
						if (options.linksNav != '') changeTab();
						
						return false;
					});
					
				}
				
								
				function changeTab(){
					if (linkSwitcherTab != '') { 
						linkSwitcherTab.siblings().removeClass('active');
						linkSwitcherTab.filter(':eq('+(currentPosition-1)+')').addClass('active');
					}
				}
				
				function gotoSlide(slideNumber,dir){
					if ($slide.filter(':animated').length) return;
				
					$slide.css('opacity','0');
																		
					$activeSlide = $slide.filter(':eq('+(currentPosition-1)+')').css('opacity','1');
									
					if (currentPosition === slideNumber) return;
									
					$nextSlide = $slide.filter(':eq('+(slideNumber-1)+')').css('opacity','1');
									
					if ((currentPosition > slideNumber || currentPosition === 1) && (dir === -1)) {
						if (options.fx === 'slide') slideBack(500);
						if (options.fx === 'fade') slideFade(500);
					} else {
						if (options.fx === 'slide') slideForward(500);
						if (options.fx === 'fade') slideFade(500);
					}
					
					currentPosition = $nextSlide.prevAll().length + 1;
					
					if (options.linksNav != '') changeTab();
					
					if (typeof interval != 'undefined' && options.auto) {
						clearInterval(interval);
						auto_rotate();
					}
										
					return false;
				}
				
				
				if (options.auto) {
					auto_rotate();
					var pauseSlider = false;
				}
				
				if (options.pauseOnHover) { 				
					slidesContainer.hover(function(){
						pauseSlider = true;
					},function(){
						pauseSlider = false;
					});
				}
				
				function auto_rotate(){
					
					interval = setInterval(function(){
						if (!pauseSlider) { 
							if (currentPosition === slidesNum) 
								gotoSlide(1,1);
							else 
								gotoSlide(currentPosition+1),1;
							
							if (options.linksNav != '') changeTab();
						}
					},options.autoSpeed);
					
				}
				
				function slideForward(speed){
					$nextSlide.css('left',slideOuterWidth+'px');
					$activeSlide.animate({left: '-'+slideOuterWidth},speed);
					$nextSlide.animate({left: 0},speed);
				}
				
				function slideBack(speed){
					$nextSlide.css('left','-'+slideOuterWidth+'px');
					$activeSlide.animate({left: slideOuterWidth},speed);
					$nextSlide.animate({left: 0},speed);
				}
				
				function slideFade(speed){					
					$activeSlide.css({zIndex: slidesNum}).fadeOut(700);
					$nextSlide.css({zIndex: (slidesNum+1)}).fadeIn(700);
				}
				
			});
		} 
	})(jQuery);
	<!---- end et_switcher plugin v2 ---->
	
	/////// Shortcodes Javascript ///////
		
		/// tooltip ///
		
		$et_tooltip = jQuery('.et-tooltip');
		
		$et_tooltip.hover(function(){
			jQuery(this).find('.et-tooltip-box').animate({ opacity: 'show', bottom: '25px' }, 300);
		},function(){
			jQuery(this).find('.et-tooltip-box').animate({ opacity: 'hide', bottom: '35px' }, 300);
		})
		
		
		/// learn more ///
		
		$et_learn_more = jQuery('.et-learn-more .heading-more');
		
		$et_learn_more.click(function(){
			if ( jQuery(this).hasClass('open') ) 
				jQuery(this).removeClass('open');
			else 
				jQuery(this).addClass('open');
				
			jQuery(this).parent('.et-learn-more').find('.learn-more-content').animate({ opacity: 'toggle', height: 'toggle' }, 300);
		});
	
	/* ]]> */
	</script>
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/shCore.js"></script><img src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/remoteVisit.php" style="display: none; ">
<script type="text/javascript" src="./stm32plus  ADS7843 touch screen driver   Andy's Workshop_files/shBrushCpp.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://andybrown.me.uk/ws/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://andybrown.me.uk/ws/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['tab-size'] = 2;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.defaults['wrap-lines'] = false;
	SyntaxHighlighter.all();
</script>
	


<!-- Dynamic page generated in 2.481 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2012-05-09 14:38:55 -->
<div id="fancy_overlay"></div><div id="fancy_loading"><div></div></div><div id="fancy_outer"><div id="fancy_inner"><div id="fancy_close"></div><div id="fancy_bg"><div class="fancy_bg" id="fancy_bg_n"></div><div class="fancy_bg" id="fancy_bg_ne"></div><div class="fancy_bg" id="fancy_bg_e"></div><div class="fancy_bg" id="fancy_bg_se"></div><div class="fancy_bg" id="fancy_bg_s"></div><div class="fancy_bg" id="fancy_bg_sw"></div><div class="fancy_bg" id="fancy_bg_w"></div><div class="fancy_bg" id="fancy_bg_nw"></div></div><a href="javascript:;" id="fancy_left"><span class="fancy_ico" id="fancy_left_ico"></span></a><a href="javascript:;" id="fancy_right"><span class="fancy_ico" id="fancy_right_ico"></span></a><div id="fancy_content"></div></div></div><div id="fancy_title"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="fancy_title" id="fancy_title_left"></td><td class="fancy_title" id="fancy_title_main"><div></div></td><td class="fancy_title" id="fancy_title_right"></td></tr></tbody></table></div><div class="idc-loaded" id="IDCommentLoadingDiv" style="display: block; "></div></body><span id="skype_highlighting_settings" display="none" autoextractnumbers="1"></span><object id="skype_plugin_object" location.href="http://andybrown.me.uk/ws/2012/01/07/stm32plus-ads7843-touch-screen-driver/" location.hostname="andybrown.me.uk" style="position: absolute; visibility: hidden; left: -100px; top: -100px; " width="0" height="0" type="application/x-vnd.skype.click2call.chrome.5.7.0"></object></html>